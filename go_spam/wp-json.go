package main

type Context struct {
	Default  string `json:"default"`
	Required bool   `json:"required"`
}

type Args struct {
	Context Context `json:"context"`
}

type Endpoints struct {
	Methods []string `json:"methods"`
	Args    Args     `json:"args"`
}

type Self struct {
	Href string `json:"href"`
}

type Links struct {
	Self []Self `json:"self"`
}

type Nameing struct {
	Namespace string      `json:"namespace"`
	Methods   []string    `json:"methods"`
	Endpoints []Endpoints `json:"endpoints"`
	Links     Links       `json:"_links"`
}

type Route struct {
}

type WpJsonResponse struct {
	Name           string   `json:"name"`
	Description    string   `json:"description"`
	URL            string   `json:"url"`
	Home           string   `json:"home"`
	GmtOffset      string   `json:"gmt_offset"`
	TimezoneString string   `json:"timezone_string"`
	Namespaces     []string `json:"namespaces"`
	Authentication []any    `json:"authentication"`
	Routes         struct {
		NAMING_FAILED Nameing `json:"/"`
		BatchV1       struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Validation struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Default  string   `json:"default"`
						Required bool     `json:"required"`
					} `json:"validation"`
					Requests struct {
						Type     string `json:"type"`
						MaxItems int    `json:"maxItems"`
						Items    struct {
							Type       string `json:"type"`
							Properties struct {
								Method struct {
									Type    string   `json:"type"`
									Enum    []string `json:"enum"`
									Default string   `json:"default"`
								} `json:"method"`
								Path struct {
									Type     string `json:"type"`
									Required bool   `json:"required"`
								} `json:"path"`
								Body struct {
									Type                 string `json:"type"`
									Properties           []any  `json:"properties"`
									AdditionalProperties bool   `json:"additionalProperties"`
								} `json:"body"`
								Headers struct {
									Type                 string `json:"type"`
									Properties           []any  `json:"properties"`
									AdditionalProperties struct {
										Type  []string `json:"type"`
										Items struct {
											Type string `json:"type"`
										} `json:"items"`
									} `json:"additionalProperties"`
								} `json:"headers"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"requests"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/batch/v1"`
		Oembed10 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/oembed/1.0"`
		Oembed10Embed struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Format struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"format"`
					Maxwidth struct {
						Default  int  `json:"default"`
						Required bool `json:"required"`
					} `json:"maxwidth"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/oembed/1.0/embed"`
		Oembed10Proxy struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Format struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"format"`
					Maxwidth struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"maxwidth"`
					Maxheight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maxheight"`
					Discover struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"discover"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/oembed/1.0/proxy"`
		WcV3 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3"`
		WcV3MarketplaceFeatured struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/featured"`
		WcV3MarketplaceRefresh struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/refresh"`
		WcV3MarketplaceSubscriptions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/subscriptions"`
		WcV3MarketplaceSubscriptionsConnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductKey struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"product_key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/subscriptions/connect"`
		WcV3MarketplaceSubscriptionsDisconnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductKey struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"product_key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/subscriptions/disconnect"`
		WcV3MarketplaceSubscriptionsActivate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductKey struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"product_key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/subscriptions/activate"`
		WcV3MarketplaceSubscriptionsInstallURL struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductKey struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"product_key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/subscriptions/install-url"`
		WcV3MarketplaceCreateOrder struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Required bool `json:"required"`
					} `json:"product_id"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/marketplace/create-order"`
		JetpackV4 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4"`
		JetpackV4VerifyXmlrpcError struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Nonce struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"nonce"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/verify_xmlrpc_error"`
		JetpackV4VerifyRegistration struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/verify_registration"`
		JetpackV4RemoteAuthorize struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/remote_authorize"`
		JetpackV4RemoteProvision struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/remote_provision"`
		JetpackV4RemoteRegister struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/remote_register"`
		JetpackV4RemoteConnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/remote_connect"`
		JetpackV4ConnectionCheck struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/check"`
		JetpackV4Connection struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection"`
		JetpackV4ConnectionData struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/data"`
		JetpackV4ConnectionPlugins struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/plugins"`
		JetpackV4ConnectionReconnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/reconnect"`
		JetpackV4ConnectionRegister struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					From struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"from"`
					RegistrationNonce struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"registration_nonce"`
					RedirectURI struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"redirect_uri"`
					PluginSlug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"plugin_slug"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/register"`
		JetpackV4ConnectionAuthorizeURL struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					RedirectURI struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"redirect_uri"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/authorize_url"`
		JetpackV4UserToken struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					UserToken struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"user_token"`
					IsConnectionOwner struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"is_connection_owner"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/user-token"`
		JetpackV4ConnectionOwner struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Owner struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"owner"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/connection/owner"`
		JetpackV4HeartbeatData struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Prefix struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"prefix"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/jetpack/v4/heartbeat/data"`
		WcAdmin struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin"`
		WcAdminNoticeDismiss struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/notice/dismiss"`
		WcAdminFeatures struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/features"`
		WcAdminExperimentsAssignment struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/experiments/assignment"`
		WcAdminMarketingRecommended struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Category struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"category"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/recommended"`
		WcAdminMarketingKnowledgeBase struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Category struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"category"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/knowledge-base"`
		WcAdminMarketingMiscRecommendations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/misc-recommendations"`
		WcAdminMarketingOverviewActivatePlugin struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Plugin struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"plugin"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/overview/activate-plugin"`
		WcAdminMarketingOverviewInstalledPlugins struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/overview/installed-plugins"`
		WcAdminMarketingRecommendations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Category struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Required bool     `json:"required"`
					} `json:"category"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/recommendations"`
		WcAdminMarketingChannels struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/channels"`
		WcAdminMarketingCampaigns struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/campaigns"`
		WcAdminMarketingCampaignTypes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/marketing/campaign-types"`
		WcAdminOptions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/options"`
		WcAdminPaymentGatewaySuggestions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ForceDefaultSuggestions struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force_default_suggestions"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/payment-gateway-suggestions"`
		WcAdminPaymentGatewaySuggestionsDismiss struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/payment-gateway-suggestions/dismiss"`
		WcAdminThemes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Pluginzip struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"pluginzip"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/themes"`
		WcAdminPluginsInstall struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/install"`
		WcAdminPluginsInstallStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/install/status"`
		WcAdminPluginsInstallStatusPJobIDAZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/plugins/install/status/(?P<job_id>[a-z0-9_\-]+)"`
		WcAdminPluginsActive struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/active"`
		WcAdminPluginsInstalled struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/installed"`
		WcAdminPluginsActivate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/activate"`
		WcAdminPluginsActivateStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/activate/status"`
		WcAdminPluginsActivateStatusPJobIDAZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/plugins/activate/status/(?P<job_id>[a-z0-9_\-]+)"`
		WcAdminPluginsConnectJetpack struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/connect-jetpack"`
		WcAdminPluginsRequestWccomConnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/request-wccom-connect"`
		WcAdminPluginsFinishWccomConnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/finish-wccom-connect"`
		WcAdminPluginsConnectWcpay struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/connect-wcpay"`
		WcAdminPluginsConnectSquare struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/plugins/connect-square"`
		WcAdminOnboardingFreeExtensions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/free-extensions"`
		WcAdminOnboardingProductTypes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/product-types"`
		WcAdminOnboardingProfile struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/profile"`
		WcAdminOnboardingProfileExperimentalGetEmailPrefill struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/profile/experimental_get_email_prefill"`
		WcAdminOnboardingProfileProgress struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/profile/progress"`
		WcAdminOnboardingProfileProgressCoreProfilerComplete struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Step struct {
						Type        string   `json:"type"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"step"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/profile/progress/core-profiler/complete"`
		WcAdminOnboardingTasksImportSampleProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/tasks/import_sample_products"`
		WcAdminOnboardingTasksCreateHomepage struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/tasks/create_homepage"`
		WcAdminOnboardingTasksCreateProductFromTemplate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					TemplateName struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"template_name"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/tasks/create_product_from_template"`
		WcAdminOnboardingTasks struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Ids struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"ids"`
				} `json:"args,omitempty"`
				Args0 struct {
					Ids struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"ids"`
					ExtendedTasks struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"extended_tasks"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/tasks"`
		WcAdminOnboardingTasksPIDAZ09Hide struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_\-]+)/hide"`
		WcAdminOnboardingTasksPIDAZ09Unhide struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_\-]+)/unhide"`
		WcAdminOnboardingTasksPIDAZ09Dismiss struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_\-]+)/dismiss"`
		WcAdminOnboardingTasksPIDAZ09UndoDismiss struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_\-]+)/undo_dismiss"`
		WcAdminOnboardingTasksPIDAZ09Snooze struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Duration struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"duration"`
					TaskListID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"task_list_id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_-]+)/snooze"`
		WcAdminOnboardingTasksPIDAZ09Action struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_\-]+)/action"`
		WcAdminOnboardingTasksPIDAZ09UndoSnooze struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/tasks/(?P<id>[a-z0-9_\-]+)/undo_snooze"`
		WcAdminOnboardingThemesInstall struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/themes/install"`
		WcAdminOnboardingThemesActivate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/themes/activate"`
		WcAdminOnboardingThemesRecommended struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Industry struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"industry"`
					Currency struct {
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Required    bool     `json:"required"`
					} `json:"currency"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/themes/recommended"`
		WcAdminOnboardingPluginsInstallAndActivateAsync struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Plugins struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       string `json:"items"`
						Required    bool   `json:"required"`
					} `json:"plugins"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/plugins/install-and-activate-async"`
		WcAdminOnboardingPluginsInstallAndActivate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/plugins/install-and-activate"`
		WcAdminOnboardingPluginsScheduledInstallsPJobIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/onboarding/plugins/scheduled-installs/(?P<job_id>\w+)"`
		WcAdminOnboardingPluginsJetpackAuthorizationURL struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					RedirectURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"redirect_url"`
					From struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     string `json:"default"`
						Required    bool   `json:"required"`
					} `json:"from"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/plugins/jetpack-authorization-url"`
		WcAdminOnboardingProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/onboarding/products"`
		WcAdminMobileAppSendMagicLink struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/mobile-app/send-magic-link"`
		WcAdminMobileApp struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/mobile-app"`
		WcAdminShippingPartnerSuggestions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ForceDefaultSuggestions struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force_default_suggestions"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/shipping-partner-suggestions"`
		WcAdminAiStoreTitle struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					BusinessDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"business_description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/ai/store-title"`
		WcAdminAiBusinessDescription struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					BusinessDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"business_description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/ai/business-description"`
		WcAdminAiStoreInfo struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/ai/store-info"`
		WcAdminAiImages struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					BusinessDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"business_description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/ai/images"`
		WcAdminAiPatterns struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					BusinessDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"business_description"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"images"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/ai/patterns"`
		WcAdminAiProduct struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductsInformation struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"products_information"`
					LastProduct struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_product"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/ai/product"`
		WcAdminLaunchYourStoreInitializeComingSoon struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/launch-your-store/initialize-coming-soon"`
		WcAdminLaunchYourStoreUpdateSurveyStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Status struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Required bool     `json:"required"`
					} `json:"status"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/launch-your-store/update-survey-status"`
		WcAdminLaunchYourStoreSurveyCompleted struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/launch-your-store/survey-completed"`
		WcAdminLaunchYourStoreWoopaymentsTestOrdersCount struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/launch-your-store/woopayments/test-orders/count"`
		WcAdminLaunchYourStoreWoopaymentsTestOrders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/launch-your-store/woopayments/test-orders"`
		WcAnalytics struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics"`
		WcAnalyticsCustomers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					RegisteredBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_before"`
					RegisteredAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_after"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Searchby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"searchby"`
					NameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_includes"`
					NameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_excludes"`
					UsernameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_includes"`
					UsernameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_excludes"`
					EmailIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_includes"`
					EmailExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_excludes"`
					CountryIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_includes"`
					CountryExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_excludes"`
					LastActiveBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_before"`
					LastActiveAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_after"`
					LastActiveBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"last_active_between"`
					RegisteredBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"registered_between"`
					OrdersCountMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_min"`
					OrdersCountMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_max"`
					OrdersCountBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"orders_count_between"`
					TotalSpendMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_min"`
					TotalSpendMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_max"`
					TotalSpendBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"total_spend_between"`
					AvgOrderValueMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_min"`
					AvgOrderValueMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_max"`
					AvgOrderValueBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"avg_order_value_between"`
					LastOrderBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_before"`
					LastOrderAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_after"`
					Users struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"users"`
					FilterEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"filter_empty"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/customers"`
		WcAnalyticsCustomersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					RegisteredBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_before"`
					RegisteredAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_after"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Searchby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"searchby"`
					NameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_includes"`
					NameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_excludes"`
					UsernameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_includes"`
					UsernameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_excludes"`
					EmailIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_includes"`
					EmailExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_excludes"`
					CountryIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_includes"`
					CountryExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_excludes"`
					LastActiveBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_before"`
					LastActiveAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_after"`
					LastActiveBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"last_active_between"`
					RegisteredBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"registered_between"`
					OrdersCountMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_min"`
					OrdersCountMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_max"`
					OrdersCountBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"orders_count_between"`
					TotalSpendMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_min"`
					TotalSpendMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_max"`
					TotalSpendBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"total_spend_between"`
					AvgOrderValueMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_min"`
					AvgOrderValueMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_max"`
					AvgOrderValueBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"avg_order_value_between"`
					LastOrderBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_before"`
					LastOrderAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_after"`
					Users struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"users"`
					FilterEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"filter_empty"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/customers/(?P<id>[\d-]+)"`
		WcAnalyticsLeaderboards struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					PersistedQuery struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"persisted_query"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/leaderboards"`
		WcAnalyticsLeaderboardsAllowed struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/leaderboards/allowed"`
		WcAnalyticsLeaderboardsPLeaderboardW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Leaderboard struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Required bool     `json:"required"`
					} `json:"leaderboard"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					PersistedQuery struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"persisted_query"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/leaderboards/(?P<leaderboard>\w+)"`
		WcAnalyticsReports struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports"`
		WcAnalyticsReportsImport struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Days struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"days"`
					SkipExisting struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"skip_existing"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/import"`
		WcAnalyticsReportsImportCancel struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/import/cancel"`
		WcAnalyticsReportsImportDelete struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/import/delete"`
		WcAnalyticsReportsImportStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/import/status"`
		WcAnalyticsReportsImportTotals struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Days struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"days"`
					SkipExisting struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"skip_existing"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/import/totals"`
		WcAnalyticsReportsPTypeAZExport struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ReportArgs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"report_args"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/reports/(?P<type>[a-z]+)/export"`
		WcAnalyticsReportsPTypeAZExportPExportIDAZ09Status struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/reports/(?P<type>[a-z]+)/export/(?P<export_id>[a-z0-9]+)/status"`
		WcAnalyticsReportsProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					Products struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"products"`
					ExtendedInfo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"extended_info"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/products"`
		WcAnalyticsReportsVariations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					ProductIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_includes"`
					ProductExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_excludes"`
					Variations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variations"`
					ExtendedInfo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"extended_info"`
					AttributeIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is"`
					AttributeIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is_not"`
					CategoryIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"category_includes"`
					CategoryExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"category_excludes"`
					Products struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"products"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/variations"`
		WcAnalyticsReportsProductsStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Fields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fields"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Products struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"products"`
					Variations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variations"`
					Segmentby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"segmentby"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/products/stats"`
		WcAnalyticsReportsVariationsStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Fields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fields"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					CategoryIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"category_includes"`
					CategoryExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"category_excludes"`
					ProductIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_includes"`
					ProductExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_excludes"`
					Variations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variations"`
					Segmentby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"segmentby"`
					AttributeIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is"`
					AttributeIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is_not"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/variations/stats"`
		WcAnalyticsReportsRevenueStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Segmentby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"segmentby"`
					DateType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"date_type"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/revenue/stats"`
		WcAnalyticsReportsOrders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					ProductIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_includes"`
					ProductExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_excludes"`
					VariationIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"variation_includes"`
					VariationExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"variation_excludes"`
					CouponIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"coupon_includes"`
					CouponExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"coupon_excludes"`
					TaxRateIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"tax_rate_includes"`
					TaxRateExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"tax_rate_excludes"`
					StatusIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status_is"`
					StatusIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status_is_not"`
					CustomerType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"customer_type"`
					Refunds struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"refunds"`
					ExtendedInfo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"extended_info"`
					OrderIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"order_includes"`
					OrderExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"order_excludes"`
					AttributeIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is"`
					AttributeIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is_not"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/orders"`
		WcAnalyticsReportsOrdersStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					StatusIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status_is"`
					StatusIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status_is_not"`
					ProductIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_includes"`
					ProductExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_excludes"`
					VariationIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"variation_includes"`
					VariationExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"variation_excludes"`
					CouponIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"coupon_includes"`
					CouponExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"coupon_excludes"`
					TaxRateIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"tax_rate_includes"`
					TaxRateExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"tax_rate_excludes"`
					Customer struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"customer"`
					CustomerType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"customer_type"`
					Refunds struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"refunds"`
					AttributeIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is"`
					AttributeIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attribute_is_not"`
					Segmentby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"segmentby"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/orders/stats"`
		WcAnalyticsReportsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					StatusIs struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status_is"`
					StatusIsNot struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status_is_not"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					ExtendedInfo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"extended_info"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/categories"`
		WcAnalyticsReportsTaxes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Taxes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"taxes"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/taxes"`
		WcAnalyticsReportsTaxesStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Fields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fields"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Taxes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"taxes"`
					Segmentby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"segmentby"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/taxes/stats"`
		WcAnalyticsReportsCoupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Coupons struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupons"`
					ExtendedInfo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"extended_info"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/coupons"`
		WcAnalyticsReportsCouponsStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Fields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fields"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Coupons struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupons"`
					Segmentby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"segmentby"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/coupons/stats"`
		WcAnalyticsReportsStock struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/stock"`
		WcAnalyticsReportsStockStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/stock/stats"`
		WcAnalyticsReportsDownloads struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					ProductIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_includes"`
					ProductExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_excludes"`
					OrderIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"order_includes"`
					OrderExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"order_excludes"`
					CustomerIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"customer_includes"`
					CustomerExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"customer_excludes"`
					IPAddressIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"ip_address_includes"`
					IPAddressExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"ip_address_excludes"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/downloads"`
		WcAnalyticsReportsDownloadsStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					Fields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fields"`
					Interval struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"interval"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					ProductIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_includes"`
					ProductExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"product_excludes"`
					OrderIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"order_includes"`
					OrderExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"order_excludes"`
					CustomerIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"customer_includes"`
					CustomerExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"customer_excludes"`
					IPAddressIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"ip_address_includes"`
					IPAddressExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"ip_address_excludes"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/downloads/stats"`
		WcAnalyticsReportsCustomers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
					RegisteredBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_before"`
					RegisteredAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_after"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Searchby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"searchby"`
					NameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_includes"`
					NameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_excludes"`
					UsernameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_includes"`
					UsernameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_excludes"`
					EmailIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_includes"`
					EmailExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_excludes"`
					CountryIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_includes"`
					CountryExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_excludes"`
					LastActiveBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_before"`
					LastActiveAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_after"`
					LastActiveBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"last_active_between"`
					RegisteredBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"registered_between"`
					OrdersCountMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_min"`
					OrdersCountMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_max"`
					OrdersCountBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"orders_count_between"`
					TotalSpendMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_min"`
					TotalSpendMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_max"`
					TotalSpendBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"total_spend_between"`
					AvgOrderValueMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_min"`
					AvgOrderValueMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_max"`
					AvgOrderValueBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"avg_order_value_between"`
					LastOrderBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_before"`
					LastOrderAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_after"`
					Customers struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"customers"`
					Users struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"users"`
					FilterEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"filter_empty"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/customers"`
		WcAnalyticsReportsCustomersStats struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					RegisteredBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_before"`
					RegisteredAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"registered_after"`
					Match struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"match"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Searchby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"searchby"`
					NameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_includes"`
					NameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name_excludes"`
					UsernameIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_includes"`
					UsernameExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username_excludes"`
					EmailIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_includes"`
					EmailExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email_excludes"`
					CountryIncludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_includes"`
					CountryExcludes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country_excludes"`
					LastActiveBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_before"`
					LastActiveAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_active_after"`
					LastActiveBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"last_active_between"`
					RegisteredBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"registered_between"`
					OrdersCountMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_min"`
					OrdersCountMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"orders_count_max"`
					OrdersCountBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"orders_count_between"`
					TotalSpendMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_min"`
					TotalSpendMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"total_spend_max"`
					TotalSpendBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"total_spend_between"`
					AvgOrderValueMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_min"`
					AvgOrderValueMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"avg_order_value_max"`
					AvgOrderValueBetween struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"avg_order_value_between"`
					LastOrderBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_before"`
					LastOrderAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"last_order_after"`
					Customers struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"customers"`
					Fields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fields"`
					ForceCacheRefresh struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force_cache_refresh"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/customers/stats"`
		WcAnalyticsReportsPerformanceIndicators struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Stats struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum []any  `json:"enum"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"stats"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/performance-indicators"`
		WcAnalyticsReportsPerformanceIndicatorsAllowed struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Stats struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum []any  `json:"enum"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"stats"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/reports/performance-indicators/allowed"`
		WcAnalyticsAdminNotes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"type"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					Source struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"source"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/admin/notes"`
		WcAnalyticsAdminNotesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/admin/notes/(?P<id>[\d-]+)"`
		WcAnalyticsAdminNotesDeletePIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/admin/notes/delete/(?P<id>[\d-]+)"`
		WcAnalyticsAdminNotesDeleteAll struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/admin/notes/delete/all"`
		WcAnalyticsAdminNotesTrackerPNoteIDDUserPUserIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/admin/notes/tracker/(?P<note_id>[\d-]+)/user/(?P<user_id>[\d-]+)"`
		WcAnalyticsAdminNotesUpdate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/admin/notes/update"`
		WcAnalyticsAdminNotesExperimentalActivatePromoPPromoNoteNameW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/admin/notes/experimental-activate-promo/(?P<promo_note_name>[\w-]+)"`
		WcAnalyticsAdminNotesPNoteIDDActionPActionIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					NoteID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"note_id"`
					ActionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"action_id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/admin/notes/(?P<note_id>[\d-]+)/action/(?P<action_id>[\d-]+)"`
		WcAnalyticsCoupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/coupons"`
		WcAnalyticsCouponsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/coupons/(?P<id>[\d]+)"`
		WcAnalyticsCouponsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/coupons/batch"`
		WcAnalyticsData struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/data"`
		WcAnalyticsDataCountriesLocales struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/data/countries/locales"`
		WcAnalyticsDataCountries struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/data/countries"`
		WcAnalyticsDataCountriesPLocationW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Location struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"location"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/data/countries/(?P<location>[\w-]+)"`
		WcAnalyticsDataDownloadIps struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/data/download-ips"`
		WcAnalyticsOrders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Status struct {
						Default     []string `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					Customer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
					OrderItemDisplayMeta struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_item_display_meta"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					Number struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"number"`
				} `json:"args,omitempty"`
				Args0 struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args,omitempty"`
				Args1 struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/orders"`
		WcAnalyticsOrdersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/orders/(?P<id>[\d]+)"`
		WcAnalyticsOrdersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/orders/batch"`
		WcAnalyticsProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Brand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"brand"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					SearchSku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search_sku"`
					IncludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_status"`
					ExcludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_status"`
					IncludeTypes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_types"`
					ExcludeTypes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_types"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					LowInStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"low_in_stock"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products"`
		WcAnalyticsProductsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/(?P<id>[\d]+)"`
		WcAnalyticsProductsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/batch"`
		WcAnalyticsProductsSuggestedProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Brand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"brand"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"tags"`
					Limit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"limit"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/suggested-products"`
		WcAnalyticsProductsPIDDDuplicate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/(?P<id>[\d]+)/duplicate"`
		WcAnalyticsProductsAttributes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
				Args1 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/attributes"`
		WcAnalyticsProductsAttributesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/attributes/(?P<id>[\d]+)"`
		WcAnalyticsProductsAttributesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/attributes/batch"`
		WcAnalyticsProductsAttributesPSlugAZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/attributes/(?P<slug>[a-z0-9_\-]+)"`
		WcAnalyticsProductsAttributesPAttributeIDDTerms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/attributes/(?P<attribute_id>[\d]+)/terms"`
		WcAnalyticsProductsAttributesPAttributeIDDTermsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/attributes/(?P<attribute_id>[\d]+)/terms/(?P<id>[\d]+)"`
		WcAnalyticsProductsAttributesPAttributeIDDTermsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/attributes/(?P<attribute_id>[\d]+)/terms/batch"`
		WcAnalyticsProductsAttributesPSlugAZ09Terms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/attributes/(?P<slug>[a-z0-9_\-]+)/terms"`
		WcAnalyticsProductsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/categories"`
		WcAnalyticsProductsCategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/categories/(?P<id>[\d]+)"`
		WcAnalyticsProductsCategoriesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/categories/batch"`
		WcAnalyticsProductsPProductIDDVariations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					HasPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_price"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"attribute"`
								Term struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"term"`
								Terms struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"terms"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					IncludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_status"`
					ExcludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_status"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args2 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args3 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/(?P<product_id>[\d]+)/variations"`
		WcAnalyticsProductsPProductIDDVariationsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args3 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args4 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args5 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args6 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args,omitempty"`
				Args7 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/(?P<product_id>[\d]+)/variations/(?P<id>[\d]+)"`
		WcAnalyticsProductsPProductIDDVariationsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/(?P<product_id>[\d]+)/variations/batch"`
		WcAnalyticsProductsPProductIDDVariationsGenerate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Delete struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"delete"`
					DefaultValues struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Type struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"type"`
							Description struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"description"`
							Sku struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"sku"`
							GlobalUniqueID struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"global_unique_id"`
							RegularPrice struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"regular_price"`
							SalePrice struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"sale_price"`
							DateOnSaleFrom struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_from"`
							DateOnSaleFromGmt struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_from_gmt"`
							DateOnSaleTo struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_to"`
							DateOnSaleToGmt struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_to_gmt"`
							Status struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"status"`
							Virtual struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"virtual"`
							Downloadable struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"downloadable"`
							Downloads struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Items            struct {
									Type       string `json:"type"`
									Properties struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										File struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"file"`
									} `json:"properties"`
								} `json:"items"`
							} `json:"downloads"`
							DownloadLimit struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"download_limit"`
							DownloadExpiry struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"download_expiry"`
							TaxStatus struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"tax_status"`
							TaxClass struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"tax_class"`
							ManageStock struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"manage_stock"`
							StockQuantity struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"stock_quantity"`
							StockStatus struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"stock_status"`
							Backorders struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"backorders"`
							LowStockAmount struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"low_stock_amount"`
							Weight struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"weight"`
							Dimensions struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Properties       struct {
									Length struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"length"`
									Width struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"width"`
									Height struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"height"`
								} `json:"properties"`
							} `json:"dimensions"`
							ShippingClass struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"shipping_class"`
							Image struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Properties       struct {
									ID struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"id"`
									DateCreated struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_created"`
									DateCreatedGmt struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_created_gmt"`
									DateModified struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_modified"`
									DateModifiedGmt struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_modified_gmt"`
									Src struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Format      string   `json:"format"`
										Context     []string `json:"context"`
									} `json:"src"`
									Name struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"name"`
									Alt struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"alt"`
								} `json:"properties"`
							} `json:"image"`
							Attributes struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Items            struct {
									Type       string `json:"type"`
									Properties struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										Option struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"option"`
									} `json:"properties"`
								} `json:"items"`
							} `json:"attributes"`
							MenuOrder struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"menu_order"`
							MetaData struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Items            struct {
									Type       string `json:"type"`
									Properties struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"id"`
										Key struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"key"`
										Value struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
										} `json:"value"`
									} `json:"properties"`
								} `json:"items"`
							} `json:"meta_data"`
							Name struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"name"`
							ParentID struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"parent_id"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"default_values"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/(?P<product_id>[\d]+)/variations/generate"`
		WcAnalyticsVariations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					HasPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_price"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"attribute"`
								Term struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"term"`
								Terms struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"terms"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					IncludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_status"`
					ExcludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_status"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/variations"`
		WcAnalyticsProductsReviews struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"reviewer"`
					ReviewerExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"reviewer_exclude"`
					ReviewerEmail struct {
						Default     any    `json:"default"`
						Description string `json:"description"`
						Format      string `json:"format"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Product struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/reviews"`
		WcAnalyticsProductsReviewsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/products/reviews/(?P<id>[\d]+)"`
		WcAnalyticsProductsReviewsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/reviews/batch"`
		WcAnalyticsProductsLowInStock struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/low-in-stock"`
		WcAnalyticsProductsCountLowInStock struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/products/count-low-in-stock"`
		WcAnalyticsSettingsPGroupIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/settings/(?P<group_id>[\w-]+)"`
		WcAnalyticsSettingsPGroupIDWBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/settings/(?P<group_id>[\w-]+)/batch"`
		WcAnalyticsSettingsPGroupIDWPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args,omitempty"`
				Args1 struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/settings/(?P<group_id>[\w-]+)/(?P<id>[\w-]+)"`
		WcAnalyticsTaxes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Class struct {
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
				} `json:"args,omitempty"`
				Args0 struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args,omitempty"`
				Args1 struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/taxes"`
		WcAnalyticsTaxesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
				Args2 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args,omitempty"`
				Args3 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc-analytics/taxes/(?P<id>[\d]+)"`
		WcAnalyticsTaxesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-analytics/taxes/batch"`
		WcStore struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store"`
		WcStoreBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Validation struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Default  string   `json:"default"`
						Required bool     `json:"required"`
					} `json:"validation"`
					Requests struct {
						Type     string `json:"type"`
						MaxItems int    `json:"maxItems"`
						Items    struct {
							Type       string `json:"type"`
							Properties struct {
								Method struct {
									Type    string   `json:"type"`
									Enum    []string `json:"enum"`
									Default string   `json:"default"`
								} `json:"method"`
								Path struct {
									Type     string `json:"type"`
									Required bool   `json:"required"`
								} `json:"path"`
								Body struct {
									Type                 string `json:"type"`
									Properties           []any  `json:"properties"`
									AdditionalProperties bool   `json:"additionalProperties"`
								} `json:"body"`
								Headers struct {
									Type                 string `json:"type"`
									Properties           []any  `json:"properties"`
									AdditionalProperties struct {
										Type  []string `json:"type"`
										Items struct {
											Type string `json:"type"`
										} `json:"items"`
									} `json:"additionalProperties"`
								} `json:"headers"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"requests"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/batch"`
		WcStoreCart struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart"`
		WcStoreCartAddItem struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Quantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"quantity"`
					Variation struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"attribute"`
								Value struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variation"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/add-item"`
		WcStoreCartApplyCoupon struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/apply-coupon"`
		WcStoreCartCoupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					DiscountType struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"discount_type"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/coupons"`
		WcStoreCartCouponsPCodeW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/store/cart/coupons/(?P<code>[\w-]+)"`
		WcStoreCartExtensions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Namespace struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"namespace"`
					Data struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/extensions"`
		WcStoreCartItems struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Default    []any  `json:"default"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/items"`
		WcStoreCartItemsPKeyW32 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args,omitempty"`
				Args1 struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/store/cart/items/(?P<key>[\w-]{32})"`
		WcStoreCartRemoveCoupon struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/remove-coupon"`
		WcStoreCartRemoveItem struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/remove-item"`
		WcStoreCartSelectShippingRate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					PackageID struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"package_id"`
					RateID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate_id"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/select-shipping-rate"`
		WcStoreCartUpdateItem struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Quantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"quantity"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/update-item"`
		WcStoreCartUpdateCustomer struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					BillingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"email"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing_address"`
					ShippingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping_address"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/cart/update-customer"`
		WcStoreCheckout struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					PaymentData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Key struct {
									Type string `json:"type"`
								} `json:"key"`
								Value struct {
									Type []string `json:"type"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"payment_data"`
					CustomerPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_password"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					BillingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"email"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing_address"`
					ShippingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping_address"`
					PaymentMethod struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"payment_method"`
					CreateAccount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"create_account"`
					AdditionalFields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"additional_fields"`
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Default    []any  `json:"default"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/checkout"`
		WcStoreCheckoutPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					PaymentData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Key struct {
									Type string `json:"type"`
								} `json:"key"`
								Value struct {
									Type []string `json:"type"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"payment_data"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					BillingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"email"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing_address"`
					ShippingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping_address"`
					PaymentMethod struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"payment_method"`
					AdditionalFields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"additional_fields"`
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Default    []any  `json:"default"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/checkout/(?P<id>[\d]+)"`
		WcStoreOrderPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/order/(?P<id>[\d]+)"`
		WcStoreProductsAttributes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/products/attributes"`
		WcStoreProductsAttributesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/products/attributes/(?P<id>[\d]+)"`
		WcStoreProductsAttributesPAttributeIDDTerms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/products/attributes/(?P<attribute_id>[\d]+)/terms"`
		WcStoreProductsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/products/categories"`
		WcStoreProductsCategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/products/categories/(?P<id>[\d]+)"`
		WcStoreProductsCollectionData struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					DateColumn struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"date_column"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					CategoryOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"category_operator"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					TagOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"tag_operator"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					StockStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type             string   `json:"type"`
							Enum             []string `json:"enum"`
							SanitizeCallback string   `json:"sanitize_callback"`
							ValidateCallback string   `json:"validate_callback"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"stock_status"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Description      string `json:"description"`
									Type             string `json:"type"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"attribute"`
								TermID struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"term_id"`
								Slug struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"slug"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
								} `json:"operator"`
							} `json:"properties"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attributes"`
					AttributeRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"attribute_relation"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum []int  `json:"enum"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"rating"`
					CalculatePriceRange struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"calculate_price_range"`
					CalculateStockStatusCounts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"calculate_stock_status_counts"`
					CalculateAttributeCounts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Taxonomy struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"taxonomy"`
								QueryType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"query_type"`
							} `json:"properties"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"calculate_attribute_counts"`
					CalculateRatingCounts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"calculate_rating_counts"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/products/collection-data"`
		WcStoreProductsReviews struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					CategoryID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category_id"`
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/products/reviews"`
		WcStoreProductsTags struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/products/tags"`
		WcStoreProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					DateColumn struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"date_column"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					CategoryOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"category_operator"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					TagOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"tag_operator"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					StockStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type             string   `json:"type"`
							Enum             []string `json:"enum"`
							SanitizeCallback string   `json:"sanitize_callback"`
							ValidateCallback string   `json:"validate_callback"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"stock_status"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Description      string `json:"description"`
									Type             string `json:"type"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"attribute"`
								TermID struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"term_id"`
								Slug struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"slug"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
								} `json:"operator"`
							} `json:"properties"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attributes"`
					AttributeRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"attribute_relation"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum []int  `json:"enum"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"rating"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/products"`
		WcStoreProductsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/products/(?P<id>[\d]+)"`
		WcStoreProductsPSlugS struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/products/(?P<slug>[\S]+)"`
		WcStoreV1 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1"`
		WcStoreV1Batch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Validation struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Default  string   `json:"default"`
						Required bool     `json:"required"`
					} `json:"validation"`
					Requests struct {
						Type     string `json:"type"`
						MaxItems int    `json:"maxItems"`
						Items    struct {
							Type       string `json:"type"`
							Properties struct {
								Method struct {
									Type    string   `json:"type"`
									Enum    []string `json:"enum"`
									Default string   `json:"default"`
								} `json:"method"`
								Path struct {
									Type     string `json:"type"`
									Required bool   `json:"required"`
								} `json:"path"`
								Body struct {
									Type                 string `json:"type"`
									Properties           []any  `json:"properties"`
									AdditionalProperties bool   `json:"additionalProperties"`
								} `json:"body"`
								Headers struct {
									Type                 string `json:"type"`
									Properties           []any  `json:"properties"`
									AdditionalProperties struct {
										Type  []string `json:"type"`
										Items struct {
											Type string `json:"type"`
										} `json:"items"`
									} `json:"additionalProperties"`
								} `json:"headers"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"requests"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/batch"`
		WcStoreV1Cart struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart"`
		WcStoreV1CartAddItem struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Quantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"quantity"`
					Variation struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"attribute"`
								Value struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variation"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/add-item"`
		WcStoreV1CartApplyCoupon struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/apply-coupon"`
		WcStoreV1CartCoupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					DiscountType struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"discount_type"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/coupons"`
		WcStoreV1CartCouponsPCodeW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/cart/coupons/(?P<code>[\w-]+)"`
		WcStoreV1CartExtensions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Namespace struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"namespace"`
					Data struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/extensions"`
		WcStoreV1CartItems struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Default    []any  `json:"default"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/items"`
		WcStoreV1CartItemsPKeyW32 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args,omitempty"`
				Args1 struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/cart/items/(?P<key>[\w-]{32})"`
		WcStoreV1CartRemoveCoupon struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/remove-coupon"`
		WcStoreV1CartRemoveItem struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/remove-item"`
		WcStoreV1CartSelectShippingRate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					PackageID struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"package_id"`
					RateID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate_id"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/select-shipping-rate"`
		WcStoreV1CartUpdateItem struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Key struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Quantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"quantity"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/update-item"`
		WcStoreV1CartUpdateCustomer struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					BillingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"email"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing_address"`
					ShippingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping_address"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/cart/update-customer"`
		WcStoreV1Checkout struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					PaymentData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Key struct {
									Type string `json:"type"`
								} `json:"key"`
								Value struct {
									Type []string `json:"type"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"payment_data"`
					CustomerPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_password"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					BillingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"email"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing_address"`
					ShippingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping_address"`
					PaymentMethod struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"payment_method"`
					CreateAccount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"create_account"`
					AdditionalFields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"additional_fields"`
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Default    []any  `json:"default"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/checkout"`
		WcStoreV1CheckoutPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					PaymentData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Key struct {
									Type string `json:"type"`
								} `json:"key"`
								Value struct {
									Type []string `json:"type"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"payment_data"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					BillingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"email"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing_address"`
					ShippingAddress struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Required    bool     `json:"required"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping_address"`
					PaymentMethod struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"payment_method"`
					AdditionalFields struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"additional_fields"`
					Extensions struct {
						Type       string `json:"type"`
						Properties []any  `json:"properties"`
						Default    []any  `json:"default"`
						Required   bool   `json:"required"`
					} `json:"extensions"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/checkout/(?P<id>[\d]+)"`
		WcStoreV1OrderPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/order/(?P<id>[\d]+)"`
		WcStoreV1ProductsAttributes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/products/attributes"`
		WcStoreV1ProductsAttributesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/products/attributes/(?P<id>[\d]+)"`
		WcStoreV1ProductsAttributesPAttributeIDDTerms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/products/attributes/(?P<attribute_id>[\d]+)/terms"`
		WcStoreV1ProductsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/products/categories"`
		WcStoreV1ProductsCategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/products/categories/(?P<id>[\d]+)"`
		WcStoreV1ProductsCollectionData struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					DateColumn struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"date_column"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					CategoryOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"category_operator"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					TagOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"tag_operator"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					StockStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type             string   `json:"type"`
							Enum             []string `json:"enum"`
							SanitizeCallback string   `json:"sanitize_callback"`
							ValidateCallback string   `json:"validate_callback"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"stock_status"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Description      string `json:"description"`
									Type             string `json:"type"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"attribute"`
								TermID struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"term_id"`
								Slug struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"slug"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
								} `json:"operator"`
							} `json:"properties"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attributes"`
					AttributeRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"attribute_relation"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum []int  `json:"enum"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"rating"`
					CalculatePriceRange struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"calculate_price_range"`
					CalculateStockStatusCounts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"calculate_stock_status_counts"`
					CalculateAttributeCounts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Taxonomy struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"taxonomy"`
								QueryType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"query_type"`
							} `json:"properties"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"calculate_attribute_counts"`
					CalculateRatingCounts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"calculate_rating_counts"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/products/collection-data"`
		WcStoreV1ProductsReviews struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					CategoryID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category_id"`
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/products/reviews"`
		WcStoreV1ProductsTags struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/products/tags"`
		WcStoreV1Products struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					DateColumn struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"date_column"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					CategoryOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"category_operator"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					TagOperator struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"tag_operator"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					StockStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type             string   `json:"type"`
							Enum             []string `json:"enum"`
							SanitizeCallback string   `json:"sanitize_callback"`
							ValidateCallback string   `json:"validate_callback"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"stock_status"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Description      string `json:"description"`
									Type             string `json:"type"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"attribute"`
								TermID struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"term_id"`
								Slug struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									SanitizeCallback string `json:"sanitize_callback"`
								} `json:"slug"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
								} `json:"operator"`
							} `json:"properties"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"attributes"`
					AttributeRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"attribute_relation"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum []int  `json:"enum"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"rating"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/store/v1/products"`
		WcStoreV1ProductsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/products/(?P<id>[\d]+)"`
		WcStoreV1ProductsPSlugS struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/store/v1/products/(?P<slug>[\S]+)"`
		WcPrivate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/private"`
		WcPrivateAiProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					BusinessDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"business_description"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"images"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/private/ai/products"`
		WcPrivatePatterns struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/private/patterns"`
		WcV2 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2"`
		WcV2ProductsBrands struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/brands"`
		WcV2ProductsBrandsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/brands/(?P<id>[\d]+)"`
		WcV2ProductsBrandsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/brands/batch"`
		WcV3ProductsBrands struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/brands"`
		WcV3ProductsBrandsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/brands/(?P<id>[\d]+)"`
		WcV3ProductsBrandsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/brands/batch"`
		FontAwesomeV1 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1"`
		FontAwesomeV1API struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/api"`
		FontAwesomeV1APIToken struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/api/token"`
		FontAwesomeV1Config struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/config"`
		FontAwesomeV1PreferenceCheck struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/preference-check"`
		FontAwesomeV1ConflictDetectionUntil struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/conflict-detection/until"`
		FontAwesomeV1ConflictDetectionConflicts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/conflict-detection/conflicts"`
		FontAwesomeV1ConflictDetectionConflictsBlocklist struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/font-awesome/v1/conflict-detection/conflicts/blocklist"`
		WcV1 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1"`
		WcV1Coupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Filter struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"filter"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DiscountType struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					ExpiryDate struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"expiry_date"`
					IndividualUse struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludeProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/coupons"`
		WcV1CouponsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					ExpiryDate struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"expiry_date"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludeProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/coupons/(?P<id>[\d]+)"`
		WcV1CouponsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					ExpiryDate struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"expiry_date"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludeProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/coupons/batch"`
		WcV1CustomersPCustomerIDDDownloads struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v1/customers/(?P<customer_id>[\d]+)/downloads"`
		WcV1Customers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					Role struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"role"`
				} `json:"args,omitempty"`
				Args0 struct {
					Email struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/customers"`
		WcV1CustomersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
					Reassign struct {
						Default     int    `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reassign"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/customers/(?P<id>[\d]+)"`
		WcV1CustomersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/customers/batch"`
		WcV1OrdersPOrderIDDNotes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Note struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"note"`
					CustomerNote struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/orders/(?P<order_id>[\d]+)/notes"`
		WcV1OrdersPOrderIDDNotesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/orders/(?P<order_id>[\d]+)/notes/(?P<id>[\d]+)"`
		WcV1OrdersPOrderIDDRefunds struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Filter struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"filter"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Customer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Reason struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reason"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/orders/(?P<order_id>[\d]+)/refunds"`
		WcV1OrdersPOrderIDDRefundsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/orders/(?P<order_id>[\d]+)/refunds/(?P<id>[\d]+)"`
		WcV1Orders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Filter struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"filter"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Customer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
				} `json:"args,omitempty"`
				Args0 struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					SetPaid struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"tax_class"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								Meta struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"key"`
											Label struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"label"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/orders"`
		WcV1OrdersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"tax_class"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								Meta struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"key"`
											Label struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"label"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/orders/(?P<id>[\d]+)"`
		WcV1OrdersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"tax_class"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								Meta struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"key"`
											Label struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"label"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/orders/batch"`
		WcV1ProductsAttributesPAttributeIDDTerms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/attributes/(?P<attribute_id>[\d]+)/terms"`
		WcV1ProductsAttributesPAttributeIDDTermsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/attributes/(?P<attribute_id>[\d]+)/terms/(?P<id>[\d]+)"`
		WcV1ProductsAttributesPAttributeIDDTermsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/attributes/(?P<attribute_id>[\d]+)/terms/batch"`
		WcV1ProductsAttributes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/attributes"`
		WcV1ProductsAttributesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/attributes/(?P<id>[\d]+)"`
		WcV1ProductsAttributesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/attributes/batch"`
		WcV1ProductsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/categories"`
		WcV1ProductsCategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/categories/(?P<id>[\d]+)"`
		WcV1ProductsCategoriesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/categories/batch"`
		WcV1ProductsPProductIDDReviews struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Review struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"review"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Email struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/(?P<product_id>[\d]+)/reviews"`
		WcV1ProductsPProductIDDReviewsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/(?P<product_id>[\d]+)/reviews/(?P<id>[\d]+)"`
		WcV1ProductsShippingClasses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/shipping_classes"`
		WcV1ProductsShippingClassesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/shipping_classes/(?P<id>[\d]+)"`
		WcV1ProductsShippingClassesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/shipping_classes/batch"`
		WcV1ProductsTags struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/tags"`
		WcV1ProductsTagsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/tags/(?P<id>[\d]+)"`
		WcV1ProductsTagsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/tags/batch"`
		WcV1Products struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Filter struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"filter"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleTo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"date_on_sale_to"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					DownloadType struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"download_type"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					SoldIndividually struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					Variations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								Permalink struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"permalink"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								RegularPrice struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"regular_price"`
								SalePrice struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"sale_price"`
								DateOnSaleFrom struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"date_on_sale_from"`
								DateOnSaleTo struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"date_on_sale_to"`
								OnSale struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"on_sale"`
								Purchasable struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"purchasable"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Virtual struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"virtual"`
								Downloadable struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"downloadable"`
								Downloads struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Name struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"name"`
											File struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"file"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"downloads"`
								DownloadLimit struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     any      `json:"default"`
									Context     []string `json:"context"`
								} `json:"download_limit"`
								DownloadExpiry struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     any      `json:"default"`
									Context     []string `json:"context"`
								} `json:"download_expiry"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     string   `json:"default"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
								} `json:"tax_status"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								ManageStock struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"manage_stock"`
								StockQuantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"stock_quantity"`
								InStock struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"in_stock"`
								Backorders struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     string   `json:"default"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
								} `json:"backorders"`
								BackordersAllowed struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"backorders_allowed"`
								Backordered struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"backordered"`
								Weight struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"weight"`
								Dimensions struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Properties  struct {
										Length struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"length"`
										Width struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"width"`
										Height struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"height"`
									} `json:"properties"`
								} `json:"dimensions"`
								ShippingClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"shipping_class"`
								ShippingClassID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"shipping_class_id"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										DateCreated struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"date_created"`
										DateModified struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"date_modified"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										Alt struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"alt"`
										Position struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"position"`
									} `json:"properties"`
								} `json:"image"`
								Attributes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Name struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"name"`
											Option struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"option"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"attributes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variations"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products"`
		WcV1ProductsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleTo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"date_on_sale_to"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					DownloadType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"download_type"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					Variations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								Permalink struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"permalink"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								RegularPrice struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"regular_price"`
								SalePrice struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"sale_price"`
								DateOnSaleFrom struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"date_on_sale_from"`
								DateOnSaleTo struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"date_on_sale_to"`
								OnSale struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"on_sale"`
								Purchasable struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"purchasable"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Virtual struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"virtual"`
								Downloadable struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"downloadable"`
								Downloads struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Name struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"name"`
											File struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"file"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"downloads"`
								DownloadLimit struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     any      `json:"default"`
									Context     []string `json:"context"`
								} `json:"download_limit"`
								DownloadExpiry struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     any      `json:"default"`
									Context     []string `json:"context"`
								} `json:"download_expiry"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     string   `json:"default"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
								} `json:"tax_status"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								ManageStock struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"manage_stock"`
								StockQuantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"stock_quantity"`
								InStock struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"in_stock"`
								Backorders struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     string   `json:"default"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
								} `json:"backorders"`
								BackordersAllowed struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"backorders_allowed"`
								Backordered struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"backordered"`
								Weight struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"weight"`
								Dimensions struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Properties  struct {
										Length struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"length"`
										Width struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"width"`
										Height struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"height"`
									} `json:"properties"`
								} `json:"dimensions"`
								ShippingClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"shipping_class"`
								ShippingClassID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"shipping_class_id"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										DateCreated struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"date_created"`
										DateModified struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"date_modified"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										Alt struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"alt"`
										Position struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"position"`
									} `json:"properties"`
								} `json:"image"`
								Attributes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Name struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"name"`
											Option struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"option"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"attributes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variations"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/products/(?P<id>[\d]+)"`
		WcV1ProductsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleTo struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"date_on_sale_to"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					DownloadType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"download_type"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					Variations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								Permalink struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"permalink"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								RegularPrice struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"regular_price"`
								SalePrice struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"sale_price"`
								DateOnSaleFrom struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"date_on_sale_from"`
								DateOnSaleTo struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"date_on_sale_to"`
								OnSale struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"on_sale"`
								Purchasable struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"purchasable"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Virtual struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"virtual"`
								Downloadable struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"downloadable"`
								Downloads struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Name struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"name"`
											File struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"file"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"downloads"`
								DownloadLimit struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     any      `json:"default"`
									Context     []string `json:"context"`
								} `json:"download_limit"`
								DownloadExpiry struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     any      `json:"default"`
									Context     []string `json:"context"`
								} `json:"download_expiry"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     string   `json:"default"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
								} `json:"tax_status"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								ManageStock struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"manage_stock"`
								StockQuantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"stock_quantity"`
								InStock struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"in_stock"`
								Backorders struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     string   `json:"default"`
									Enum        []string `json:"enum"`
									Context     []string `json:"context"`
								} `json:"backorders"`
								BackordersAllowed struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"backorders_allowed"`
								Backordered struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"backordered"`
								Weight struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"weight"`
								Dimensions struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Properties  struct {
										Length struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"length"`
										Width struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"width"`
										Height struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"height"`
									} `json:"properties"`
								} `json:"dimensions"`
								ShippingClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"shipping_class"`
								ShippingClassID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"shipping_class_id"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										DateCreated struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"date_created"`
										DateModified struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"date_modified"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										Alt struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"alt"`
										Position struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"position"`
									} `json:"properties"`
								} `json:"image"`
								Attributes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Name struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"name"`
											Option struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"option"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"attributes"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"variations"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/products/batch"`
		WcV1ReportsSales struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Period struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"period"`
					DateMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_min"`
					DateMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_max"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/reports/sales"`
		WcV1ReportsTopSellers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Period struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"period"`
					DateMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_min"`
					DateMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_max"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/reports/top_sellers"`
		WcV1Reports struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/reports"`
		WcV1TaxesClasses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/taxes/classes"`
		WcV1TaxesClassesPSlugWWS struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v1/taxes/classes/(?P<slug>\w[\w\s\-]*)"`
		WcV1Taxes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Class struct {
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
				Args0 struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/taxes"`
		WcV1TaxesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/taxes/(?P<id>[\d]+)"`
		WcV1TaxesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/taxes/batch"`
		WcV1Webhooks struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
					DeliveryURL struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"delivery_url"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/webhooks"`
		WcV1WebhooksPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v1/webhooks/(?P<id>[\d]+)"`
		WcV1WebhooksBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v1/webhooks/batch"`
		WcV1WebhooksPWebhookIDDDeliveries struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					WebhookID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"webhook_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v1/webhooks/(?P<webhook_id>[\d]+)/deliveries"`
		WcV1WebhooksPWebhookIDDDeliveriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					WebhookID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"webhook_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v1/webhooks/(?P<webhook_id>[\d]+)/deliveries/(?P<id>[\d]+)"`
		WcV2Coupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/coupons"`
		WcV2CouponsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/coupons/(?P<id>[\d]+)"`
		WcV2CouponsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/coupons/batch"`
		WcV2CustomersPCustomerIDDDownloads struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/customers/(?P<customer_id>[\d]+)/downloads"`
		WcV2Customers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					Role struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"role"`
				} `json:"args,omitempty"`
				Args0 struct {
					Email struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/customers"`
		WcV2CustomersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
					Reassign struct {
						Default     int    `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reassign"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/customers/(?P<id>[\d]+)"`
		WcV2CustomersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/customers/batch"`
		WcV2OrdersPOrderIDDNotes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Note struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"note"`
					CustomerNote struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/orders/(?P<order_id>[\d]+)/notes"`
		WcV2OrdersPOrderIDDNotesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/orders/(?P<order_id>[\d]+)/notes/(?P<id>[\d]+)"`
		WcV2OrdersPOrderIDDRefunds struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
					OrderItemDisplayMeta struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_item_display_meta"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Reason struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reason"`
					RefundedBy struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"refunded_by"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					APIRefund struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"api_refund"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/orders/(?P<order_id>[\d]+)/refunds"`
		WcV2OrdersPOrderIDDRefundsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/orders/(?P<order_id>[\d]+)/refunds/(?P<id>[\d]+)"`
		WcV2Orders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Customer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
					OrderItemDisplayMeta struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_item_display_meta"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args,omitempty"`
				Args0 struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/orders"`
		WcV2OrdersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/orders/(?P<id>[\d]+)"`
		WcV2OrdersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/orders/batch"`
		WcV2ProductsAttributesPAttributeIDDTerms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/attributes/(?P<attribute_id>[\d]+)/terms"`
		WcV2ProductsAttributesPAttributeIDDTermsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/attributes/(?P<attribute_id>[\d]+)/terms/(?P<id>[\d]+)"`
		WcV2ProductsAttributesPAttributeIDDTermsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/attributes/(?P<attribute_id>[\d]+)/terms/batch"`
		WcV2ProductsAttributes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/attributes"`
		WcV2ProductsAttributesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/attributes/(?P<id>[\d]+)"`
		WcV2ProductsAttributesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/attributes/batch"`
		WcV2ProductsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/categories"`
		WcV2ProductsCategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/categories/(?P<id>[\d]+)"`
		WcV2ProductsCategoriesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Title struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"title"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/categories/batch"`
		WcV2ProductsPProductIDDReviews struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Review struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"review"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Email struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<product_id>[\d]+)/reviews"`
		WcV2ProductsPProductIDDReviewsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<product_id>[\d]+)/reviews/(?P<id>[\d]+)"`
		WcV2ProductsPProductIDDReviewsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<product_id>[\d]+)/reviews/batch"`
		WcV2ProductsShippingClasses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/shipping_classes"`
		WcV2ProductsShippingClassesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/shipping_classes/(?P<id>[\d]+)"`
		WcV2ProductsShippingClassesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/shipping_classes/batch"`
		WcV2ProductsTags struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/tags"`
		WcV2ProductsTagsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/tags/(?P<id>[\d]+)"`
		WcV2ProductsTagsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/tags/batch"`
		WcV2Products struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Brand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"brand"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					SoldIndividually struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					GroupedProducts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"grouped_products"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products"`
		WcV2ProductsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					GroupedProducts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"grouped_products"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<id>[\d]+)"`
		WcV2ProductsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					GroupedProducts struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"grouped_products"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/products/batch"`
		WcV2ProductsPProductIDDVariations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Visible struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"visible"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool     `json:"default"`
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
							Position struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"position"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<product_id>[\d]+)/variations"`
		WcV2ProductsPProductIDDVariationsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Visible struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"visible"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
							Position struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"position"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<product_id>[\d]+)/variations/(?P<id>[\d]+)"`
		WcV2ProductsPProductIDDVariationsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Visible struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"visible"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
							Position struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"position"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/products/(?P<product_id>[\d]+)/variations/batch"`
		WcV2ReportsSales struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Period struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"period"`
					DateMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_min"`
					DateMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_max"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/reports/sales"`
		WcV2ReportsTopSellers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Period struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"period"`
					DateMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_min"`
					DateMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_max"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/reports/top_sellers"`
		WcV2Reports struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/reports"`
		WcV2Settings struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/settings"`
		WcV2SettingsPGroupIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/settings/(?P<group_id>[\w-]+)"`
		WcV2SettingsPGroupIDWBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/settings/(?P<group_id>[\w-]+)/batch"`
		WcV2SettingsPGroupIDWPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/settings/(?P<group_id>[\w-]+)/(?P<id>[\w-]+)"`
		WcV2ShippingZones struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/shipping/zones"`
		WcV2ShippingZonesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/shipping/zones/(?P<id>[\d]+)"`
		WcV2ShippingZonesPIDDLocations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/shipping/zones/(?P<id>[\d]+)/locations"`
		WcV2ShippingZonesPZoneIDDMethods struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Enabled struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"enabled"`
					Settings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"id"`
							Label struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"label"`
							Description struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"description"`
							Type struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Enum        []string `json:"enum"`
								Readonly    bool     `json:"readonly"`
							} `json:"type"`
							Value struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"value"`
							Default struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"default"`
							Tip struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"tip"`
							Placeholder struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"placeholder"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"settings"`
					MethodID struct {
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"method_id"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/shipping/zones/(?P<zone_id>[\d]+)/methods"`
		WcV2ShippingZonesPZoneIDDMethodsPInstanceIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					InstanceID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance_id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					InstanceID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance_id"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Enabled struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"enabled"`
					Settings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"id"`
							Label struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"label"`
							Description struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"description"`
							Type struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Enum        []string `json:"enum"`
								Readonly    bool     `json:"readonly"`
							} `json:"type"`
							Value struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"value"`
							Default struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"default"`
							Tip struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"tip"`
							Placeholder struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"placeholder"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"settings"`
				} `json:"args,omitempty"`
				Args1 struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					InstanceID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/shipping/zones/(?P<zone_id>[\d]+)/methods/(?P<instance_id>[\d]+)"`
		WcV2TaxesClasses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/taxes/classes"`
		WcV2TaxesClassesPSlugWWS struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/taxes/classes/(?P<slug>\w[\w\s\-]*)"`
		WcV2Taxes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Class struct {
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
				Args0 struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/taxes"`
		WcV2TaxesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/taxes/(?P<id>[\d]+)"`
		WcV2TaxesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/taxes/batch"`
		WcV2Webhooks struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
					DeliveryURL struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"delivery_url"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/webhooks"`
		WcV2WebhooksPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/webhooks/(?P<id>[\d]+)"`
		WcV2WebhooksBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/webhooks/batch"`
		WcV2WebhooksPWebhookIDDDeliveries struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					WebhookID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"webhook_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/webhooks/(?P<webhook_id>[\d]+)/deliveries"`
		WcV2WebhooksPWebhookIDDDeliveriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					WebhookID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"webhook_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/webhooks/(?P<webhook_id>[\d]+)/deliveries/(?P<id>[\d]+)"`
		WcV2SystemStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/system_status"`
		WcV2SystemStatusTools struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/system_status/tools"`
		WcV2SystemStatusToolsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Action struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"action"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Success struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"success"`
					Message struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"message"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/system_status/tools/(?P<id>[\w-]+)"`
		WcV2ShippingMethods struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/shipping_methods"`
		WcV2ShippingMethodsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v2/shipping_methods/(?P<id>[\w-]+)"`
		WcV2PaymentGateways struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v2/payment_gateways"`
		WcV2PaymentGatewaysPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"title"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Enabled struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"enabled"`
					Settings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"id"`
							Label struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"label"`
							Description struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"description"`
							Type struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Enum        []string `json:"enum"`
								Readonly    bool     `json:"readonly"`
							} `json:"type"`
							Value struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"value"`
							Default struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"default"`
							Tip struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"tip"`
							Placeholder struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"placeholder"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"settings"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v2/payment_gateways/(?P<id>[\w-]+)"`
		WcV3Coupons struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
				} `json:"args,omitempty"`
				Args0 struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/coupons"`
		WcV3CouponsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/coupons/(?P<id>[\d]+)"`
		WcV3CouponsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					DiscountType struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"discount_type"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					DateExpires struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires"`
					DateExpiresGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_expires_gmt"`
					IndividualUse struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"individual_use"`
					ProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_ids"`
					ExcludedProductIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_ids"`
					UsageLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit"`
					UsageLimitPerUser struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"usage_limit_per_user"`
					LimitUsageToXItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"limit_usage_to_x_items"`
					FreeShipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"free_shipping"`
					ProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_categories"`
					ExcludedProductCategories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"excluded_product_categories"`
					ExcludeSaleItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"exclude_sale_items"`
					MinimumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"minimum_amount"`
					MaximumAmount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"maximum_amount"`
					EmailRestrictions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"email_restrictions"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/coupons/batch"`
		WcV3CustomersPCustomerIDDDownloads struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/customers/(?P<customer_id>[\d]+)/downloads"`
		WcV3Customers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					Role struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"role"`
				} `json:"args,omitempty"`
				Args0 struct {
					Email struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/customers"`
		WcV3CustomersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
					Reassign struct {
						Default     int    `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reassign"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/customers/(?P<id>[\d]+)"`
		WcV3CustomersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/customers/batch"`
		WcV3LayoutTemplates struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Area struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     string `json:"default"`
						Required    bool   `json:"required"`
					} `json:"area"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/layout-templates"`
		WcV3LayoutTemplatesPIDWWS struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/layout-templates/(?P<id>\w[\w\s\-]*)"`
		WcV3OrdersPOrderIDDNotes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Note struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"note"`
					CustomerNote struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					AddedByUser struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"added_by_user"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<order_id>[\d]+)/notes"`
		WcV3OrdersPOrderIDDNotesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<order_id>[\d]+)/notes/(?P<id>[\d]+)"`
		WcV3OrdersPOrderIDDRefunds struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
					OrderItemDisplayMeta struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_item_display_meta"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					Amount struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"amount"`
					Reason struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reason"`
					RefundedBy struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"refunded_by"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					APIRefund struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"api_refund"`
					APIRestock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"api_restock"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<order_id>[\d]+)/refunds"`
		WcV3OrdersPOrderIDDRefundsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					OrderID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<order_id>[\d]+)/refunds/(?P<id>[\d]+)"`
		WcV3Orders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					Customer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
					OrderItemDisplayMeta struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_item_display_meta"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args,omitempty"`
				Args0 struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/orders"`
		WcV3OrdersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<id>[\d]+)"`
		WcV3OrdersBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Currency struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"currency"`
					CustomerID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_id"`
					CustomerNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"customer_note"`
					Billing struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
							Email struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"email"`
							Phone struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"phone"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"billing"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							FirstName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"first_name"`
							LastName struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"last_name"`
							Company struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"company"`
							Address1 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_1"`
							Address2 struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"address_2"`
							City struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"city"`
							State struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"state"`
							Postcode struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"postcode"`
							Country struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"country"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"shipping"`
					PaymentMethod struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method"`
					PaymentMethodTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"payment_method_title"`
					TransactionID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"transaction_id"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
					LineItems struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								ParentName struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"parent_name"`
								ProductID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"product_id"`
								VariationID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"variation_id"`
								Quantity struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"quantity"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								Subtotal struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"subtotal"`
								SubtotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"subtotal_tax"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
											DisplayKey struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_key"`
											DisplayValue struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"display_value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
								Sku struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"sku"`
								Price struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"price"`
								Image struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Properties  struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Src struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Format      string   `json:"format"`
											Context     []string `json:"context"`
										} `json:"src"`
									} `json:"properties"`
								} `json:"image"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"line_items"`
					ShippingLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								MethodTitle struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_title"`
								MethodID struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"method_id"`
								InstanceID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"instance_id"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"shipping_lines"`
					FeeLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								TaxClass struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"tax_class"`
								TaxStatus struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Enum        []string `json:"enum"`
								} `json:"tax_status"`
								Total struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"total"`
								TotalTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"total_tax"`
								Taxes struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Total struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"total"`
											Subtotal struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"subtotal"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"taxes"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"fee_lines"`
					CouponLines struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Code struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"code"`
								Discount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount"`
								DiscountTax struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_tax"`
								DiscountType struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"discount_type"`
								NominalAmount struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"nominal_amount"`
								FreeShipping struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"free_shipping"`
								MetaData struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Items       struct {
										Type       string `json:"type"`
										Properties struct {
											ID struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
												Readonly    bool     `json:"readonly"`
											} `json:"id"`
											Key struct {
												Description string   `json:"description"`
												Type        string   `json:"type"`
												Context     []string `json:"context"`
											} `json:"key"`
											Value struct {
												Description string   `json:"description"`
												Type        []string `json:"type"`
												Context     []string `json:"context"`
											} `json:"value"`
										} `json:"properties"`
									} `json:"items"`
								} `json:"meta_data"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"coupon_lines"`
					SetPaid struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"set_paid"`
					ManualUpdate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manual_update"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/orders/batch"`
		WcV3ProductsAttributesPAttributeIDDTerms struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/attributes/(?P<attribute_id>[\d]+)/terms"`
		WcV3ProductsAttributesPAttributeIDDTermsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/attributes/(?P<attribute_id>[\d]+)/terms/(?P<id>[\d]+)"`
		WcV3ProductsAttributesPAttributeIDDTermsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					AttributeID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/attributes/(?P<attribute_id>[\d]+)/terms/batch"`
		WcV3ProductsAttributes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/attributes"`
		WcV3ProductsAttributesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/attributes/(?P<id>[\d]+)"`
		WcV3ProductsAttributesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					OrderBy struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order_by"`
					HasArchives struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_archives"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/attributes/batch"`
		WcV3ProductsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/categories"`
		WcV3ProductsCategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/categories/(?P<id>[\d]+)"`
		WcV3ProductsCategoriesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Display struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"display"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/categories/batch"`
		WcV3ProductsCustomFieldsNames struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/custom-fields/names"`
		WcV3ProductsReviews struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"reviewer"`
					ReviewerExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"reviewer_exclude"`
					ReviewerEmail struct {
						Default     any    `json:"default"`
						Description string `json:"description"`
						Format      string `json:"format"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Product struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/reviews"`
		WcV3ProductsReviewsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/reviews/(?P<id>[\d]+)"`
		WcV3ProductsReviewsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ProductName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Reviewer struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviewer"`
					ReviewerEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"reviewer_email"`
					Review struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"review"`
					Rating struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rating"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/reviews/batch"`
		WcV3ProductsShippingClasses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/shipping_classes"`
		WcV3ProductsShippingClassesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/shipping_classes/(?P<id>[\d]+)"`
		WcV3ProductsShippingClassesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/shipping_classes/batch"`
		WcV3ProductsShippingClassesSlugSuggestion struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/shipping_classes/slug-suggestion"`
		WcV3ProductsTags struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Product struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"product"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/tags"`
		WcV3ProductsTagsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/tags/(?P<id>[\d]+)"`
		WcV3ProductsTagsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/tags/batch"`
		WcV3Products struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Brand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"brand"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					SearchSku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search_sku"`
					IncludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_status"`
					ExcludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_status"`
					IncludeTypes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_types"`
					ExcludeTypes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_types"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products"`
		WcV3ProductsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/(?P<id>[\d]+)"`
		WcV3ProductsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/batch"`
		WcV3ProductsSuggestedProducts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Brand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"brand"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Tag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tag"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Attribute struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute"`
					AttributeTerm struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attribute_term"`
					InStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"in_stock"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"tags"`
					Limit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"limit"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/products/suggested-products"`
		WcV3ProductsPIDDDuplicate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					DateCreated struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created"`
					DateCreatedGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_created_gmt"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Featured struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured"`
					CatalogVisibility struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"catalog_visibility"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					ShortDescription struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"short_description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					ExternalURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"external_url"`
					ButtonText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"button_text"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					SoldIndividually struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sold_individually"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					ReviewsAllowed struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"reviews_allowed"`
					PostPassword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_password"`
					UpsellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"upsell_ids"`
					CrossSellIds struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cross_sell_ids"`
					ParentID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent_id"`
					PurchaseNote struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"purchase_note"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"name"`
								Slug struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"slug"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
					Images struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								DateCreated struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created"`
								DateCreatedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_created_gmt"`
								DateModified struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified"`
								DateModifiedGmt struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"date_modified_gmt"`
								Src struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Format      string   `json:"format"`
									Context     []string `json:"context"`
								} `json:"src"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Alt struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"alt"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"images"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Position struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"position"`
								Visible struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"visible"`
								Variation struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Default     bool     `json:"default"`
									Context     []string `json:"context"`
								} `json:"variation"`
								Options struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Context []string `json:"context"`
								} `json:"options"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					DefaultAttributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"default_attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/(?P<id>[\d]+)/duplicate"`
		WcV3ProductsPProductIDDVariations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					OnSale struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"on_sale"`
					MinPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"min_price"`
					MaxPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"max_price"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					HasPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"has_price"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								Attribute struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"attribute"`
								Term struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"term"`
								Terms struct {
									Type        string `json:"type"`
									Description string `json:"description"`
								} `json:"terms"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					IncludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_status"`
					ExcludeStatus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_status"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/(?P<product_id>[\d]+)/variations"`
		WcV3ProductsPProductIDDVariationsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/(?P<product_id>[\d]+)/variations/(?P<id>[\d]+)"`
		WcV3ProductsPProductIDDVariationsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/(?P<product_id>[\d]+)/variations/batch"`
		WcV3ProductsPProductIDDVariationsGenerate struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"product_id"`
					Delete struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"delete"`
					DefaultValues struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Description struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"description"`
							Sku struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"sku"`
							GlobalUniqueID struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"global_unique_id"`
							RegularPrice struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"regular_price"`
							SalePrice struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"sale_price"`
							DateOnSaleFrom struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_from"`
							DateOnSaleFromGmt struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_from_gmt"`
							DateOnSaleTo struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_to"`
							DateOnSaleToGmt struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"date_on_sale_to_gmt"`
							Status struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"status"`
							Virtual struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"virtual"`
							Downloadable struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"downloadable"`
							Downloads struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Items            struct {
									Type       string `json:"type"`
									Properties struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										File struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"file"`
									} `json:"properties"`
								} `json:"items"`
							} `json:"downloads"`
							DownloadLimit struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"download_limit"`
							DownloadExpiry struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"download_expiry"`
							TaxStatus struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"tax_status"`
							TaxClass struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"tax_class"`
							ManageStock struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"manage_stock"`
							StockQuantity struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"stock_quantity"`
							StockStatus struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"stock_status"`
							Backorders struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             string   `json:"type"`
								Enum             []string `json:"enum"`
							} `json:"backorders"`
							LowStockAmount struct {
								ValidateCallback string   `json:"validate_callback"`
								SanitizeCallback string   `json:"sanitize_callback"`
								Description      string   `json:"description"`
								Type             []string `json:"type"`
							} `json:"low_stock_amount"`
							Weight struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"weight"`
							Dimensions struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Properties       struct {
									Length struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"length"`
									Width struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"width"`
									Height struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"height"`
								} `json:"properties"`
							} `json:"dimensions"`
							ShippingClass struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"shipping_class"`
							Image struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Properties       struct {
									ID struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"id"`
									DateCreated struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_created"`
									DateCreatedGmt struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_created_gmt"`
									DateModified struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_modified"`
									DateModifiedGmt struct {
										Description string   `json:"description"`
										Type        []string `json:"type"`
										Context     []string `json:"context"`
										Readonly    bool     `json:"readonly"`
									} `json:"date_modified_gmt"`
									Src struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Format      string   `json:"format"`
										Context     []string `json:"context"`
									} `json:"src"`
									Name struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"name"`
									Alt struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Context     []string `json:"context"`
									} `json:"alt"`
								} `json:"properties"`
							} `json:"image"`
							Attributes struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Items            struct {
									Type       string `json:"type"`
									Properties struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"id"`
										Name struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"name"`
										Option struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"option"`
									} `json:"properties"`
								} `json:"items"`
							} `json:"attributes"`
							MenuOrder struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
							} `json:"menu_order"`
							MetaData struct {
								ValidateCallback string `json:"validate_callback"`
								SanitizeCallback string `json:"sanitize_callback"`
								Description      string `json:"description"`
								Type             string `json:"type"`
								Items            struct {
									Type       string `json:"type"`
									Properties struct {
										ID struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
											Readonly    bool     `json:"readonly"`
										} `json:"id"`
										Key struct {
											Description string   `json:"description"`
											Type        string   `json:"type"`
											Context     []string `json:"context"`
										} `json:"key"`
										Value struct {
											Description string   `json:"description"`
											Type        []string `json:"type"`
											Context     []string `json:"context"`
										} `json:"value"`
									} `json:"properties"`
								} `json:"items"`
							} `json:"meta_data"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"default_values"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Sku struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sku"`
					GlobalUniqueID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"global_unique_id"`
					RegularPrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"regular_price"`
					SalePrice struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sale_price"`
					DateOnSaleFrom struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from"`
					DateOnSaleFromGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_from_gmt"`
					DateOnSaleTo struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to"`
					DateOnSaleToGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"date_on_sale_to_gmt"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Virtual struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"virtual"`
					Downloadable struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"downloadable"`
					Downloads struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								File struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"file"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"downloads"`
					DownloadLimit struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_limit"`
					DownloadExpiry struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"download_expiry"`
					TaxStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_status"`
					TaxClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"tax_class"`
					ManageStock struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"manage_stock"`
					StockQuantity struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stock_quantity"`
					StockStatus struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"stock_status"`
					Backorders struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"backorders"`
					LowStockAmount struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"low_stock_amount"`
					Weight struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"weight"`
					Dimensions struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Length struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"length"`
							Width struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"width"`
							Height struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"height"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"dimensions"`
					ShippingClass struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping_class"`
					Image struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"id"`
							DateCreated struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created"`
							DateCreatedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_created_gmt"`
							DateModified struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified"`
							DateModifiedGmt struct {
								Description string   `json:"description"`
								Type        []string `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"date_modified_gmt"`
							Src struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Format      string   `json:"format"`
								Context     []string `json:"context"`
							} `json:"src"`
							Name struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"name"`
							Alt struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"alt"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"image"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"id"`
								Name struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"name"`
								Option struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"option"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"attributes"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					MetaData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type       string `json:"type"`
							Properties struct {
								ID struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
									Readonly    bool     `json:"readonly"`
								} `json:"id"`
								Key struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Context     []string `json:"context"`
								} `json:"key"`
								Value struct {
									Description string   `json:"description"`
									Type        []string `json:"type"`
									Context     []string `json:"context"`
								} `json:"value"`
							} `json:"properties"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"meta_data"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/products/(?P<product_id>[\d]+)/variations/generate"`
		WcV3Refunds struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					DatesAreGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"dates_are_gmt"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					Dp struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"dp"`
					OrderItemDisplayMeta struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_item_display_meta"`
					IncludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"include_meta"`
					ExcludeMeta struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"exclude_meta"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/refunds"`
		WcV3ReportsSales struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Period struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"period"`
					DateMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_min"`
					DateMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_max"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/sales"`
		WcV3ReportsTopSellers struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Period struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"period"`
					DateMin struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_min"`
					DateMax struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_max"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/top_sellers"`
		WcV3ReportsOrdersTotals struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/orders/totals"`
		WcV3ReportsProductsTotals struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/products/totals"`
		WcV3ReportsCustomersTotals struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/customers/totals"`
		WcV3ReportsCouponsTotals struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/coupons/totals"`
		WcV3ReportsReviewsTotals struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports/reviews/totals"`
		WcV3Reports struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/reports"`
		WcV3Settings struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/settings"`
		WcV3SettingsBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/settings/batch"`
		WcV3SettingsPGroupIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/settings/(?P<group_id>[\w-]+)"`
		WcV3SettingsPGroupIDWBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/settings/(?P<group_id>[\w-]+)/batch"`
		WcV3SettingsPGroupIDWPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					Group struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"group"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Value struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"value"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/settings/(?P<group_id>[\w-]+)/(?P<id>[\w-]+)"`
		WcV3ShippingZones struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/shipping/zones"`
		WcV3ShippingZonesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/shipping/zones/(?P<id>[\d]+)"`
		WcV3ShippingZonesPIDDLocations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Code struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"code"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/shipping/zones/(?P<id>[\d]+)/locations"`
		WcV3ShippingZonesPZoneIDDMethods struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Enabled struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"enabled"`
					Settings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"id"`
							Label struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"label"`
							Description struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"description"`
							Type struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Enum        []string `json:"enum"`
								Readonly    bool     `json:"readonly"`
							} `json:"type"`
							Value struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"value"`
							Default struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"default"`
							Tip struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"tip"`
							Placeholder struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"placeholder"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"settings"`
					MethodID struct {
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"method_id"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/shipping/zones/(?P<zone_id>[\d]+)/methods"`
		WcV3ShippingZonesPZoneIDDMethodsPInstanceIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					InstanceID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance_id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					InstanceID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance_id"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Enabled struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"enabled"`
					Settings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"id"`
							Label struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"label"`
							Description struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"description"`
							Type struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Enum        []string `json:"enum"`
								Readonly    bool     `json:"readonly"`
							} `json:"type"`
							Value struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"value"`
							Default struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"default"`
							Tip struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"tip"`
							Placeholder struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"placeholder"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"settings"`
				} `json:"args,omitempty"`
				Args1 struct {
					ZoneID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"zone_id"`
					InstanceID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance_id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/shipping/zones/(?P<zone_id>[\d]+)/methods/(?P<instance_id>[\d]+)"`
		WcV3TaxesClasses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/taxes/classes"`
		WcV3TaxesClassesPSlugWWS struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/taxes/classes/(?P<slug>\w[\w\s\-]*)"`
		WcV3Taxes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Class struct {
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"class"`
				} `json:"args,omitempty"`
				Args0 struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/taxes"`
		WcV3TaxesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/taxes/(?P<id>[\d]+)"`
		WcV3TaxesBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Country struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"country"`
					State struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"state"`
					Postcode struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"postcode"`
					City struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"city"`
					Rate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"rate"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Priority struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"priority"`
					Compound struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"compound"`
					Shipping struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"shipping"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Class struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"class"`
					Postcodes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"postcodes"`
					Cities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"cities"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/taxes/batch"`
		WcV3Webhooks struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
					DeliveryURL struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"delivery_url"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/webhooks"`
		WcV3WebhooksPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Default     bool   `json:"default"`
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/webhooks/(?P<id>[\d]+)"`
		WcV3WebhooksBatch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Topic struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"topic"`
					Secret struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"secret"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/webhooks/batch"`
		WcV3SystemStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/system_status"`
		WcV3SystemStatusTools struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/system_status/tools"`
		WcV3SystemStatusToolsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Action struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"action"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Success struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"success"`
					Message struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"message"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/system_status/tools/(?P<id>[\w-]+)"`
		WcV3ShippingMethods struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/shipping_methods"`
		WcV3ShippingMethodsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/shipping_methods/(?P<id>[\w-]+)"`
		WcV3PaymentGateways struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/payment_gateways"`
		WcV3PaymentGatewaysPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"title"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Order struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order"`
					Enabled struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"enabled"`
					Settings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							ID struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"id"`
							Label struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"label"`
							Description struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"description"`
							Type struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Enum        []string `json:"enum"`
								Readonly    bool     `json:"readonly"`
							} `json:"type"`
							Value struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"value"`
							Default struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"default"`
							Tip struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"tip"`
							Placeholder struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"placeholder"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"settings"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/payment_gateways/(?P<id>[\w-]+)"`
		WcV3Data struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/data"`
		WcV3DataContinents struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/data/continents"`
		WcV3DataContinentsPLocationW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Continent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"continent"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/data/continents/(?P<location>[\w-]+)"`
		WcV3DataCountries struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/data/countries"`
		WcV3DataCountriesPLocationW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Location struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"location"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/data/countries/(?P<location>[\w-]+)"`
		WcV3DataCurrencies struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/data/currencies"`
		WcV3DataCurrenciesCurrent struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/data/currencies/current"`
		WcV3DataCurrenciesPCurrencyW3 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Location struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"location"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/data/currencies/(?P<currency>[\w-]{3})"`
		WcV3OrdersPIDDReceipt struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ExpirationDate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"expiration_date"`
					ExpirationDays struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"expiration_days"`
					ForceNew struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"force_new"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<id>[\d]+)/receipt"`
		WcV3OrdersPIDDActionsSendOrderDetails struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc/v3/orders/(?P<id>[\d]+)/actions/send_order_details"`
		WcV3OrdersStatuses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc/v3/orders/statuses"`
		WcAdminSettingsPaymentsCountry struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Location struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"location"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/settings/payments/country"`
		WcAdminSettingsPaymentsProviders struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Location struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"location"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/settings/payments/providers"`
		WcAdminSettingsPaymentsProvidersOrder struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					OrderMap struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"order_map"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin/settings/payments/providers/order"`
		WcAdminSettingsPaymentsSuggestionPIDWDHide struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/settings/payments/suggestion/(?P<id>[\w\d\-]+)/hide"`
		WcAdminSettingsPaymentsSuggestionPSuggestionIDWDIncentivePIncentiveIDWDDismiss struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wc-admin/settings/payments/suggestion/(?P<suggestion_id>[\w\d\-]+)/incentive/(?P<incentive_id>[\w\d\-]+)/dismiss"`
		WcAdminEmail struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin-email"`
		WcAdminEmailSettingsEmailSendPreview struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin-email/settings/email/send-preview"`
		WcAdminEmailSettingsEmailPreviewSubject struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin-email/settings/email/preview-subject"`
		WcAdminEmailSettingsEmailSaveTransient struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Key struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"key"`
					Value struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"value"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-admin-email/settings/email/save-transient"`
		WcTelemetry struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-telemetry"`
		WcTelemetryTracker struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Platform struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"platform"`
					Version struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"version"`
					InstallationDate struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"installation_date"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wc-telemetry/tracker"`
		WccomSiteV3 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wccom-site/v3"`
		WccomSiteV3Installer struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"product-id"`
					RunUntilStep struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Required bool     `json:"required"`
					} `json:"run-until-step"`
					IdempotencyKey struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"idempotency-key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wccom-site/v3/installer"`
		WccomSiteV3InstallerReset struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ProductID struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"product-id"`
					IdempotencyKey struct {
						Type     string `json:"type"`
						Required bool   `json:"required"`
					} `json:"idempotency-key"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wccom-site/v3/installer/reset"`
		WccomSiteV3Ssr struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wccom-site/v3/ssr"`
		WccomSiteV3Status struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wccom-site/v3/status"`
		WccomSiteV3ConnectionDisconnect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wccom-site/v3/connection/disconnect"`
		WpV2 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2"`
		WpV2Posts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"author"`
					AuthorExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"author_exclude"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					TaxRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_relation"`
					Categories struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								IncludeChildren struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Default     bool   `json:"default"`
								} `json:"include_children"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"categories"`
					CategoriesExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								IncludeChildren struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Default     bool   `json:"default"`
								} `json:"include_children"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"categories_exclude"`
					Tags struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"tags"`
					TagsExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"tags_exclude"`
					Sticky struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sticky"`
					Format struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						UniqueItems bool   `json:"uniqueItems"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"format"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Format struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"format"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Sticky struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sticky"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/posts"`
		WpV2PostsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					ExcerptLength struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"excerpt_length"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Format struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"format"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Sticky struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sticky"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/posts/(?P<id>[\d]+)"`
		WpV2PostsPParentDRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/posts/(?P<parent>[\d]+)/revisions"`
		WpV2PostsPParentDRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/posts/(?P<parent>[\d]+)/revisions/(?P<id>[\d]+)"`
		WpV2PostsPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Format struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"format"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Sticky struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sticky"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					Categories struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"categories"`
					Tags struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"tags"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/posts/(?P<id>[\d]+)/autosaves"`
		WpV2PostsPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/posts/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2Pages struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"author"`
					AuthorExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"author_exclude"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/pages"`
		WpV2PagesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					ExcerptLength struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"excerpt_length"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/pages/(?P<id>[\d]+)"`
		WpV2PagesPParentDRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/pages/(?P<parent>[\d]+)/revisions"`
		WpV2PagesPParentDRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/pages/(?P<parent>[\d]+)/revisions/(?P<id>[\d]+)"`
		WpV2PagesPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/pages/(?P<id>[\d]+)/autosaves"`
		WpV2PagesPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/pages/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2Media struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"author"`
					AuthorExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"author_exclude"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					MediaType struct {
						Default     any      `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"media_type"`
					MimeType struct {
						Default     any    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"mime_type"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					AltText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"alt_text"`
					Caption struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"caption"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"description"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/media"`
		WpV2MediaPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					AltText struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"alt_text"`
					Caption struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"caption"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"description"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/media/(?P<id>[\d]+)"`
		WpV2MediaPIDDPostProcess struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Action struct {
						Type     string   `json:"type"`
						Enum     []string `json:"enum"`
						Required bool     `json:"required"`
					} `json:"action"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/media/(?P<id>[\d]+)/post-process"`
		WpV2MediaPIDDEdit struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Src struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"src"`
					Modifiers struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinItems    int    `json:"minItems"`
						Items       struct {
							Description string   `json:"description"`
							Type        string   `json:"type"`
							Required    []string `json:"required"`
							OneOf       []struct {
								Title      string `json:"title"`
								Properties struct {
									Type struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Enum        []string `json:"enum"`
									} `json:"type"`
									Args struct {
										Description string   `json:"description"`
										Type        string   `json:"type"`
										Required    []string `json:"required"`
										Properties  struct {
											Angle struct {
												Description string `json:"description"`
												Type        string `json:"type"`
											} `json:"angle"`
										} `json:"properties"`
									} `json:"args"`
								} `json:"properties"`
							} `json:"oneOf"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"modifiers"`
					Rotation struct {
						Description      string `json:"description"`
						Type             string `json:"type"`
						Minimum          int    `json:"minimum"`
						ExclusiveMinimum bool   `json:"exclusiveMinimum"`
						Maximum          int    `json:"maximum"`
						ExclusiveMaximum bool   `json:"exclusiveMaximum"`
						Required         bool   `json:"required"`
					} `json:"rotation"`
					X struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"x"`
					Y struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"y"`
					Width struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"width"`
					Height struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"height"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/media/(?P<id>[\d]+)/edit"`
		WpV2MenuItems struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					TaxRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_relation"`
					Menus struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"menus"`
					MenusExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"menus_exclude"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
				} `json:"args,omitempty"`
				Args0 struct {
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Parent struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					AttrTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attr_title"`
					Classes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"classes"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					Object struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"object"`
					ObjectID struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"object_id"`
					Target struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"target"`
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Xfn struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"xfn"`
					Menus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menus"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/menu-items"`
		WpV2MenuItemsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					AttrTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attr_title"`
					Classes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"classes"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					Object struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"object"`
					ObjectID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"object_id"`
					Target struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"target"`
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Xfn struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"xfn"`
					Menus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menus"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/menu-items/(?P<id>[\d]+)"`
		WpV2MenuItemsPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Type struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					AttrTitle struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"attr_title"`
					Classes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"classes"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					MenuOrder struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"menu_order"`
					Object struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"object"`
					ObjectID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"object_id"`
					Target struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"target"`
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Xfn struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"xfn"`
					Menus struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"menus"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/menu-items/(?P<id>[\d]+)/autosaves"`
		WpV2MenuItemsPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/menu-items/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2Blocks struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					TaxRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_relation"`
					WpPatternCategory struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"wp_pattern_category"`
					WpPatternCategoryExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"wp_pattern_category_exclude"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							WpPatternSyncStatus struct {
								Type        string   `json:"type"`
								Title       string   `json:"title"`
								Description string   `json:"description"`
								Default     string   `json:"default"`
								Enum        []string `json:"enum"`
							} `json:"wp_pattern_sync_status"`
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					WpPatternCategory struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"wp_pattern_category"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/blocks"`
		WpV2BlocksPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					ExcerptLength struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"excerpt_length"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							WpPatternSyncStatus struct {
								Type        string   `json:"type"`
								Title       string   `json:"title"`
								Description string   `json:"description"`
								Default     string   `json:"default"`
								Enum        []string `json:"enum"`
							} `json:"wp_pattern_sync_status"`
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					WpPatternCategory struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"wp_pattern_category"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/blocks/(?P<id>[\d]+)"`
		WpV2BlocksPParentDRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/blocks/(?P<parent>[\d]+)/revisions"`
		WpV2BlocksPParentDRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/blocks/(?P<parent>[\d]+)/revisions/(?P<id>[\d]+)"`
		WpV2BlocksPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							WpPatternSyncStatus struct {
								Type        string   `json:"type"`
								Title       string   `json:"title"`
								Description string   `json:"description"`
								Default     string   `json:"default"`
								Enum        []string `json:"enum"`
							} `json:"wp_pattern_sync_status"`
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					WpPatternCategory struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"wp_pattern_category"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/blocks/(?P<id>[\d]+)/autosaves"`
		WpV2BlocksPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/blocks/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2TemplatesPParentWRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/templates/(?P<parent>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/revisions"`
		WpV2TemplatesPParentWRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/templates/(?P<parent>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/revisions/(?P<id>[\d]+)"`
		WpV2TemplatesPIDWAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Theme struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"theme"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Content struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/templates/(?P<id>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/autosaves"`
		WpV2TemplatesPParentWAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/templates/(?P<parent>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/autosaves/(?P<id>[\d]+)"`
		WpV2Templates struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					WpID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"wp_id"`
					Area struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"area"`
					PostType struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_type"`
				} `json:"args,omitempty"`
				Args0 struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Theme struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"theme"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Content struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Title struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Description struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/templates"`
		WpV2TemplatesLookup struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					IsCustom struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"is_custom"`
					TemplatePrefix struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template_prefix"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/templates/lookup"`
		WpV2TemplatesPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Theme struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"theme"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Content struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/templates/(?P<id>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)"`
		WpV2TemplatePartsPParentWRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/template-parts/(?P<parent>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/revisions"`
		WpV2TemplatePartsPParentWRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/template-parts/(?P<parent>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/revisions/(?P<id>[\d]+)"`
		WpV2TemplatePartsPIDWAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Theme struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"theme"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Content struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Area struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"area"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/template-parts/(?P<id>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/autosaves"`
		WpV2TemplatePartsPParentWAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/template-parts/(?P<parent>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)/autosaves/(?P<id>[\d]+)"`
		WpV2TemplateParts struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					WpID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"wp_id"`
					Area struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"area"`
					PostType struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_type"`
				} `json:"args,omitempty"`
				Args0 struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Theme struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"theme"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Content struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Title struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Description struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Status struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Area struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"area"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/template-parts"`
		WpV2TemplatePartsLookup struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					IsCustom struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"is_custom"`
					TemplatePrefix struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template_prefix"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/template-parts/lookup"`
		WpV2TemplatePartsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Theme struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"theme"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Content struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					Area struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"area"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/template-parts/(?P<id>([^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)[\/\w%-]+)"`
		WpV2GlobalStylesPParentDRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/global-styles/(?P<parent>[\d]+)/revisions"`
		WpV2GlobalStylesPParentDRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/global-styles/(?P<parent>[\d]+)/revisions/(?P<id>[\d]+)"`
		WpV2GlobalStylesThemesPStylesheetSWVariations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Stylesheet struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stylesheet"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/global-styles/themes/(?P<stylesheet>[\/\s%\w\.\(\)\[\]\@_\-]+)/variations"`
		WpV2GlobalStylesThemesPStylesheet struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Stylesheet struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stylesheet"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/global-styles/themes/(?P<stylesheet>[^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)"`
		WpV2GlobalStylesPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
				} `json:"args,omitempty"`
				Args0 struct {
					Styles struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"styles"`
					Settings struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Required    bool     `json:"required"`
					} `json:"settings"`
					Title struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/global-styles/(?P<id>[\/\w-]+)"`
		WpV2Navigation struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/navigation"`
		WpV2NavigationPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/navigation/(?P<id>[\d]+)"`
		WpV2NavigationPParentDRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/navigation/(?P<parent>[\d]+)/revisions"`
		WpV2NavigationPParentDRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/navigation/(?P<parent>[\d]+)/revisions/(?P<id>[\d]+)"`
		WpV2NavigationPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/navigation/(?P<id>[\d]+)/autosaves"`
		WpV2NavigationPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/navigation/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2FontFamilies struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					ThemeJSONVersion struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"theme_json_version"`
					FontFamilySettings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_family_settings"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/font-families"`
		WpV2FontFamiliesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					ThemeJSONVersion struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"theme_json_version"`
					FontFamilySettings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_family_settings"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/font-families/(?P<id>[\d]+)"`
		WpV2FontFamiliesPFontFamilyIDDFontFaces struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					FontFamilyID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_family_id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args,omitempty"`
				Args0 struct {
					FontFamilyID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_family_id"`
					ThemeJSONVersion struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"theme_json_version"`
					FontFaceSettings struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_face_settings"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/font-families/(?P<font_family_id>[\d]+)/font-faces"`
		WpV2FontFamiliesPFontFamilyIDDFontFacesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					FontFamilyID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_family_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					FontFamilyID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"font_family_id"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/font-families/(?P<font_family_id>[\d]+)/font-faces/(?P<id>[\d]+)"`
		WpV2UxBlocks struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"parent_exclude"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/ux-blocks"`
		WpV2UxBlocksPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/ux-blocks/(?P<id>[\d]+)"`
		WpV2UxBlocksPParentDRevisions struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/ux-blocks/(?P<parent>[\d]+)/revisions"`
		WpV2UxBlocksPParentDRevisionsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/ux-blocks/(?P<parent>[\d]+)/revisions/(?P<id>[\d]+)"`
		WpV2UxBlocksPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Footnotes struct {
								Type        string `json:"type"`
								Title       string `json:"title"`
								Description string `json:"description"`
								Default     string `json:"default"`
							} `json:"footnotes"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/ux-blocks/(?P<id>[\d]+)/autosaves"`
		WpV2UxBlocksPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/ux-blocks/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2Product struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
					TaxRelation struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"tax_relation"`
					ProductBrand struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								IncludeChildren struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Default     bool   `json:"default"`
								} `json:"include_children"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"product_brand"`
					ProductBrandExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								IncludeChildren struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Default     bool   `json:"default"`
								} `json:"include_children"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"product_brand_exclude"`
					ProductCat struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								IncludeChildren struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Default     bool   `json:"default"`
								} `json:"include_children"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"product_cat"`
					ProductCatExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								IncludeChildren struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Default     bool   `json:"default"`
								} `json:"include_children"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"product_cat_exclude"`
					ProductTag struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
								Operator struct {
									Description string   `json:"description"`
									Type        string   `json:"type"`
									Enum        []string `json:"enum"`
									Default     string   `json:"default"`
								} `json:"operator"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"product_tag"`
					ProductTagExclude struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						OneOf       []struct {
							Title       string `json:"title"`
							Description string `json:"description"`
							Type        string `json:"type"`
							Items       struct {
								Type string `json:"type"`
							} `json:"items,omitempty"`
							Properties struct {
								Terms struct {
									Description string `json:"description"`
									Type        string `json:"type"`
									Items       struct {
										Type string `json:"type"`
									} `json:"items"`
									Default []any `json:"default"`
								} `json:"terms"`
							} `json:"properties,omitempty"`
							AdditionalProperties bool `json:"additionalProperties,omitempty"`
						} `json:"oneOf"`
						Required bool `json:"required"`
					} `json:"product_tag_exclude"`
					Brand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"brand"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					ProductBrand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_brand"`
					ProductCat struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_cat"`
					ProductTag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_tag"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/product"`
		WpV2ProductPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					ExcerptLength struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"excerpt_length"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					ProductBrand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_brand"`
					ProductCat struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_cat"`
					ProductTag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_tag"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product/(?P<id>[\d]+)"`
		WpV2ProductPIDDAutosaves struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Title struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"title"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							BlockVersion struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"block_version"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Excerpt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
							Protected struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"protected"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"excerpt"`
					FeaturedMedia struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"featured_media"`
					CommentStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"comment_status"`
					PingStatus struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"ping_status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
					ProductBrand struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_brand"`
					ProductCat struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_cat"`
					ProductTag struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"product_tag"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product/(?P<id>[\d]+)/autosaves"`
		WpV2ProductPParentDAutosavesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product/(?P<parent>[\d]+)/autosaves/(?P<id>[\d]+)"`
		WpV2ProductVariation struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					ModifiedAfter struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_after"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					ModifiedBefore struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"modified_before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					SearchSemantics struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"search_semantics"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					SearchColumns struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"search_columns"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/product_variation"`
		WpV2ProductVariationPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Date struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Format      string   `json:"format"`
						Required    bool     `json:"required"`
					} `json:"date_gmt"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Template struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"template"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product_variation/(?P<id>[\d]+)"`
		WpV2Types struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/types"`
		WpV2TypesPTypeW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/types/(?P<type>[\w-]+)"`
		WpV2Statuses struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/statuses"`
		WpV2StatusesPStatusW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/statuses/(?P<status>[\w-]+)"`
		WpV2Taxonomies struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Type struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/taxonomies"`
		WpV2TaxonomiesPTaxonomyW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Taxonomy struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"taxonomy"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/taxonomies/(?P<taxonomy>[\w-]+)"`
		WpV2Categories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/categories"`
		WpV2CategoriesPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/categories/(?P<id>[\d]+)"`
		WpV2Tags struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/tags"`
		WpV2TagsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/tags/(?P<id>[\d]+)"`
		WpV2Menus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Locations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"locations"`
					AutoAdd struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"auto_add"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/menus"`
		WpV2MenusPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
					Locations struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"locations"`
					AutoAdd struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"auto_add"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/menus/(?P<id>[\d]+)"`
		WpV2WpPatternCategory struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/wp_pattern_category"`
		WpV2WpPatternCategoryPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/wp_pattern_category/(?P<id>[\d]+)"`
		WpV2ProductBrand struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/product_brand"`
		WpV2ProductBrandPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product_brand/(?P<id>[\d]+)"`
		WpV2ProductCat struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/product_cat"`
		WpV2ProductCatPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product_cat/(?P<id>[\d]+)"`
		WpV2ProductTag struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					HideEmpty struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Required    bool   `json:"required"`
					} `json:"hide_empty"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     any    `json:"default"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
				} `json:"args,omitempty"`
				Args0 struct {
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/product_tag"`
		WpV2ProductTagPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/product_tag/(?P<id>[\d]+)"`
		WpV2Users struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Enum        []string `json:"enum"`
						Type        string   `json:"type"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"slug"`
					Roles struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"roles"`
					Capabilities struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"capabilities"`
					Who struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"who"`
					HasPublishedPosts struct {
						Description string   `json:"description"`
						Type        []string `json:"type"`
						Items       struct {
							Type string `json:"type"`
							Enum struct {
								Post             string `json:"post"`
								Page             string `json:"page"`
								Attachment       string `json:"attachment"`
								NavMenuItem      string `json:"nav_menu_item"`
								WpBlock          string `json:"wp_block"`
								WpTemplate       string `json:"wp_template"`
								WpTemplatePart   string `json:"wp_template_part"`
								WpGlobalStyles   string `json:"wp_global_styles"`
								WpNavigation     string `json:"wp_navigation"`
								WpFontFamily     string `json:"wp_font_family"`
								WpFontFace       string `json:"wp_font_face"`
								Blocks           string `json:"blocks"`
								Product          string `json:"product"`
								ProductVariation string `json:"product_variation"`
							} `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"has_published_posts"`
				} `json:"args,omitempty"`
				Args0 struct {
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Locale struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"locale"`
					Nickname struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"nickname"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Roles struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"roles"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							PersistedPreferences struct {
								Type        string   `json:"type"`
								Title       string   `json:"title"`
								Description string   `json:"description"`
								Default     []any    `json:"default"`
								Context     []string `json:"context"`
								Properties  struct {
									Modified struct {
										Description string `json:"description"`
										Type        string `json:"type"`
										Format      string `json:"format"`
										Readonly    bool   `json:"readonly"`
									} `json:"_modified"`
								} `json:"properties"`
								AdditionalProperties bool `json:"additionalProperties"`
							} `json:"persisted_preferences"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					MetaboxhiddenProduct struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"metaboxhidden_product"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/users"`
		WpV2UsersPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Locale struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"locale"`
					Nickname struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"nickname"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Roles struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"roles"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							PersistedPreferences struct {
								Type        string   `json:"type"`
								Title       string   `json:"title"`
								Description string   `json:"description"`
								Default     []any    `json:"default"`
								Context     []string `json:"context"`
								Properties  struct {
									Modified struct {
										Description string `json:"description"`
										Type        string `json:"type"`
										Format      string `json:"format"`
										Readonly    bool   `json:"readonly"`
									} `json:"_modified"`
								} `json:"properties"`
								AdditionalProperties bool `json:"additionalProperties"`
							} `json:"persisted_preferences"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					MetaboxhiddenProduct struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"metaboxhidden_product"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
					Reassign struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reassign"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/users/(?P<id>[\d]+)"`
		WpV2UsersMe struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Username struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"username"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					FirstName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"first_name"`
					LastName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"last_name"`
					Email struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"email"`
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
					Description struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"description"`
					Locale struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"locale"`
					Nickname struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"nickname"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Roles struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"roles"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							PersistedPreferences struct {
								Type        string   `json:"type"`
								Title       string   `json:"title"`
								Description string   `json:"description"`
								Default     []any    `json:"default"`
								Context     []string `json:"context"`
								Properties  struct {
									Modified struct {
										Description string `json:"description"`
										Type        string `json:"type"`
										Format      string `json:"format"`
										Readonly    bool   `json:"readonly"`
									} `json:"_modified"`
								} `json:"properties"`
								AdditionalProperties bool `json:"additionalProperties"`
							} `json:"persisted_preferences"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"meta"`
					MetaboxhiddenProduct struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"metaboxhidden_product"`
				} `json:"args,omitempty"`
				Args1 struct {
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
					Reassign struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"reassign"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/users/me"`
		WpV2UsersPUserIDDMeApplicationPasswords struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					AppID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"app_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"name"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/users/(?P<user_id>(?:[\d]+|me))/application-passwords"`
		WpV2UsersPUserIDDMeApplicationPasswordsIntrospect struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/users/(?P<user_id>(?:[\d]+|me))/application-passwords/introspect"`
		WpV2UsersPUserIDDMeApplicationPasswordsPUUIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					AppID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"app_id"`
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"name"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/users/(?P<user_id>(?:[\d]+|me))/application-passwords/(?P<uuid>[\w\-]+)"`
		WpV2Comments struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					After struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"after"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"author"`
					AuthorExclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"author_exclude"`
					AuthorEmail struct {
						Default     any    `json:"default"`
						Description string `json:"description"`
						Format      string `json:"format"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author_email"`
					Before struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"before"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
					Parent struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"parent"`
					ParentExclude struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"parent_exclude"`
					Post struct {
						Default     []any  `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"post"`
					Status struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					Type struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"type"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					AuthorEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"author_email"`
					AuthorIP struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"author_ip"`
					AuthorName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author_name"`
					AuthorURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"author_url"`
					AuthorUserAgent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author_user_agent"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Date struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_gmt"`
					Parent struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Post struct {
						Default     int    `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/comments"`
		WpV2CommentsPIDD struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Author struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author"`
					AuthorEmail struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"author_email"`
					AuthorIP struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"author_ip"`
					AuthorName struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author_name"`
					AuthorURL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"author_url"`
					AuthorUserAgent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"author_user_agent"`
					Content struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
							Rendered struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
								Readonly    bool     `json:"readonly"`
							} `json:"rendered"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"content"`
					Date struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date"`
					DateGmt struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"date_gmt"`
					Parent struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"parent"`
					Post struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"status"`
					Meta struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  []any  `json:"properties"`
						Required    bool   `json:"required"`
					} `json:"meta"`
				} `json:"args,omitempty"`
				Args1 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Force struct {
						Type        string `json:"type"`
						Default     bool   `json:"default"`
						Description string `json:"description"`
						Required    bool   `json:"required"`
					} `json:"force"`
					Password struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"password"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/comments/(?P<id>[\d]+)"`
		WpV2Search struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Type struct {
						Default     string   `json:"default"`
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"type"`
					Subtype struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"subtype"`
					Exclude struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"exclude"`
					Include struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string `json:"type"`
						} `json:"items"`
						Default  []any `json:"default"`
						Required bool  `json:"required"`
					} `json:"include"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/search"`
		WpV2BlockRendererPNameAZ09AZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Attributes struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     []any  `json:"default"`
						Required    bool   `json:"required"`
					} `json:"attributes"`
					PostID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"post_id"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/block-renderer/(?P<name>[a-z0-9-]+/[a-z0-9-]+)"`
		WpV2BlockTypes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Namespace struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"namespace"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/block-types"`
		WpV2BlockTypesPNamespaceAZAZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Namespace struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"namespace"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/block-types/(?P<namespace>[a-zA-Z0-9_-]+)"`
		WpV2BlockTypesPNamespaceAZAZ09PNameAZAZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Name struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"name"`
					Namespace struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/block-types/(?P<namespace>[a-zA-Z0-9_-]+)/(?P<name>[a-zA-Z0-9_-]+)"`
		WpV2Settings struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/settings"`
		WpV2Themes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Enum []string `json:"enum"`
							Type string   `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/themes"`
		WpV2ThemesPStylesheet struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Stylesheet struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"stylesheet"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/themes/(?P<stylesheet>[^\/:<>\*\?"\|]+(?:\/[^\/:<>\*\?"\|]+)?)"`
		WpV2Plugins struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Status struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type string   `json:"type"`
							Enum []string `json:"enum"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
				Args0 struct {
					Slug struct {
						Type        string `json:"type"`
						Description string `json:"description"`
						Pattern     string `json:"pattern"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/plugins"`
		WpV2PluginsPPlugin struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Plugin struct {
						Type     string `json:"type"`
						Pattern  string `json:"pattern"`
						Required bool   `json:"required"`
					} `json:"plugin"`
				} `json:"args,omitempty"`
				Args0 struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Plugin struct {
						Type     string `json:"type"`
						Pattern  string `json:"pattern"`
						Required bool   `json:"required"`
					} `json:"plugin"`
					Status struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"status"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/plugins/(?P<plugin>[^.\/]+(?:\/[^.\/]+)?)"`
		WpV2Sidebars struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/sidebars"`
		WpV2SidebarsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					Widgets struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Items       struct {
							Type []string `json:"type"`
						} `json:"items"`
						Required bool `json:"required"`
					} `json:"widgets"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/sidebars/(?P<id>[\w-]+)"`
		WpV2WidgetTypes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/widget-types"`
		WpV2WidgetTypesPIDAZAZ09 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)"`
		WpV2WidgetTypesPIDAZAZ09Encode struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Instance struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance"`
					FormData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"form_data"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)/encode"`
		WpV2WidgetTypesPIDAZAZ09Render struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					Instance struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"instance"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)/render"`
		WpV2Widgets struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Sidebar struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sidebar"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					IDBase struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id_base"`
					Sidebar struct {
						Default     string `json:"default"`
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sidebar"`
					Instance struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Encoded struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"encoded"`
							Hash struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"hash"`
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"instance"`
					FormData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"form_data"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/widgets"`
		WpV2WidgetsPIDW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods    []string `json:"methods"`
				AllowBatch struct {
					V1 bool `json:"v1"`
				} `json:"allow_batch"`
				Args struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args,omitempty"`
				Args0 struct {
					ID struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id"`
					IDBase struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"id_base"`
					Sidebar struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"sidebar"`
					Instance struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Properties  struct {
							Encoded struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"encoded"`
							Hash struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"hash"`
							Raw struct {
								Description string   `json:"description"`
								Type        string   `json:"type"`
								Context     []string `json:"context"`
							} `json:"raw"`
						} `json:"properties"`
						Required bool `json:"required"`
					} `json:"instance"`
					FormData struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"form_data"`
				} `json:"args,omitempty"`
				Args1 struct {
					Force struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"force"`
				} `json:"args,omitempty"`
			} `json:"endpoints"`
		} `json:"/wp/v2/widgets/(?P<id>[\w\-]+)"`
		WpV2BlockDirectorySearch struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Term struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Required    bool   `json:"required"`
					} `json:"term"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/block-directory/search"`
		WpV2PatternDirectoryPatterns struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
					Search struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						MinLength   int    `json:"minLength"`
						Required    bool   `json:"required"`
					} `json:"search"`
					Category struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"category"`
					Keyword struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"keyword"`
					Slug struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"slug"`
					Offset struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"offset"`
					Order struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"order"`
					Orderby struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Default     string   `json:"default"`
						Enum        []string `json:"enum"`
						Required    bool     `json:"required"`
					} `json:"orderby"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/pattern-directory/patterns"`
		WpV2BlockPatternsPatterns struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/block-patterns/patterns"`
		WpV2BlockPatternsCategories struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/block-patterns/categories"`
		WpSiteHealthV1 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1"`
		WpSiteHealthV1TestsBackgroundUpdates struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/tests/background-updates"`
		WpSiteHealthV1TestsLoopbackRequests struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/tests/loopback-requests"`
		WpSiteHealthV1TestsHTTPSStatus struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/tests/https-status"`
		WpSiteHealthV1TestsDotorgCommunication struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/tests/dotorg-communication"`
		WpSiteHealthV1TestsAuthorizationHeader struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/tests/authorization-header"`
		WpSiteHealthV1DirectorySizes struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/directory-sizes"`
		WpSiteHealthV1TestsPageCache struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-site-health/v1/tests/page-cache"`
		WpBlockEditorV1 struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Namespace struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"namespace"`
					Context struct {
						Default  string `json:"default"`
						Required bool   `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-block-editor/v1"`
		WpBlockEditorV1URLDetails struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					URL struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Format      string `json:"format"`
						Required    bool   `json:"required"`
					} `json:"url"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-block-editor/v1/url-details"`
		WpV2MenuLocations struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/menu-locations"`
		WpV2MenuLocationsPLocationW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Location struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Required    bool   `json:"required"`
					} `json:"location"`
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/menu-locations/(?P<location>[\w-]+)"`
		WpBlockEditorV1Export struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-block-editor/v1/export"`
		WpBlockEditorV1NavigationFallback struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    []any    `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp-block-editor/v1/navigation-fallback"`
		WpV2FontCollections struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
					Page struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Required    bool   `json:"required"`
					} `json:"page"`
					PerPage struct {
						Description string `json:"description"`
						Type        string `json:"type"`
						Default     int    `json:"default"`
						Minimum     int    `json:"minimum"`
						Maximum     int    `json:"maximum"`
						Required    bool   `json:"required"`
					} `json:"per_page"`
				} `json:"args"`
			} `json:"endpoints"`
			Links struct {
				Self []struct {
					Href string `json:"href"`
				} `json:"self"`
			} `json:"_links"`
		} `json:"/wp/v2/font-collections"`
		WpV2FontCollectionsPSlugW struct {
			Namespace string   `json:"namespace"`
			Methods   []string `json:"methods"`
			Endpoints []struct {
				Methods []string `json:"methods"`
				Args    struct {
					Context struct {
						Description string   `json:"description"`
						Type        string   `json:"type"`
						Enum        []string `json:"enum"`
						Default     string   `json:"default"`
						Required    bool     `json:"required"`
					} `json:"context"`
				} `json:"args"`
			} `json:"endpoints"`
		} `json:"/wp/v2/font-collections/(?P<slug>[\/\w-]+)"`
	} `json:"routes"`
	SiteLogo    int    `json:"site_logo"`
	SiteIcon    int    `json:"site_icon"`
	SiteIconURL string `json:"site_icon_url"`
	Links       struct {
		Help []struct {
			Href string `json:"href"`
		} `json:"help"`
		WpFeaturedmedia []struct {
			Embeddable bool   `json:"embeddable"`
			Type       string `json:"type"`
			Href       string `json:"href"`
		} `json:"wp:featuredmedia"`
		Curies []struct {
			Name      string `json:"name"`
			Href      string `json:"href"`
			Templated bool   `json:"templated"`
		} `json:"curies"`
	} `json:"_links"`
}
